{"pageProps":{"NOTION_CONFIG":{"LINK":"https://xxxuuu.me","THEME":"autumn","KEYWORDS":"分布式系统,存储,云原生","AUTHOR":"xxxuuu","BIO":"xxxuuu","CUSTOM_MENU":"true","CUSTOM_RIGHT_CLICK_CONTEXT_MENU":"false","LANG":"zh-CN","SINCE":"2018","POST_TITLE_ICON":"false"},"notice":null,"siteInfo":{"title":"x³u³","description":"🗒 碎碎念","pageCover":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fa9af1d6b-f284-4734-ba06-990353cf3f84%2FElaina.jpg?table=collection&id=0bb2e606-8d0c-4f7c-aca9-70986e90c055&t=0bb2e606-8d0c-4f7c-aca9-70986e90c055&width=800&cache=v2","icon":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2F49b4570c-b2f0-457b-81b7-b68e2693a471%2Favatar.png?table=collection&id=0bb2e606-8d0c-4f7c-aca9-70986e90c055&t=0bb2e606-8d0c-4f7c-aca9-70986e90c055&width=800&cache=v2","link":"https://xxxuuu.me"},"allNavPages":[{"title":"确定性模拟器","pageCoverThumbnail":"","category":null,"tags":["分布式系统"],"summary":"最初接触到确定性模拟的概念是在 2022 年 Rust China Conf 上听的一场演讲，后续一直持续关注着这个领域，也在腾讯组内分享过相关议题","slug":"post/deterministic-simulator","href":"/post/deterministic-simulator","pageIcon":"","lastEditedDate":"2024-12-21T17:14:04.798Z","publishDate":1734739200000,"ext":{},"short_id":"14688756"},{"title":"浅谈协程","pageCoverThumbnail":"","category":null,"tags":["操作系统"],"summary":"最近经常被各种人问到一些关于协程的事情，例如 xx 语言的 xx 是不是协程，xx 语言和 xx 语言的协程有什么区别，我不得不一次次 share 出我的文章，索性直接发到 blog 上吧","slug":"post/coroutine","href":"/post/coroutine","pageIcon":"","lastEditedDate":"2024-11-22T15:31:35.278Z","publishDate":1732233600000,"ext":{},"short_id":"14688756"},{"title":"MemoryDB: Redis + Remote Log","pageCoverThumbnail":"","category":null,"tags":["分布式系统","数据库","论文阅读"],"summary":"MemoryDB 是 Amazon 的一个 Redis 兼容的 KV 数据库，论文发表在 SIGMOD 2024 上","slug":"post/memorydb","href":"/post/memorydb","pageIcon":"","lastEditedDate":"2024-11-18T03:17:24.166Z","publishDate":1731801600000,"ext":{},"short_id":"12988756"},{"title":"应该在 DBMS 中使用 MMAP 吗？","pageCoverThumbnail":"","category":null,"tags":["论文阅读","数据库"],"summary":null,"slug":"post/db-mmap","href":"/post/db-mmap","pageIcon":"","lastEditedDate":"2024-11-03T07:26:55.807Z","publishDate":1729987200000,"ext":{},"short_id":"94e03781"},{"title":"日本游记","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fb07e03ea-454d-48b4-a53c-169003780460%2FDSC_0663.jpg?table=block&id=11688756-3979-8028-b7d8-ce8bf2ec4253&t=11688756-3979-8028-b7d8-ce8bf2ec4253&width=800&cache=v2","category":null,"tags":["碎碎念","旅行"],"summary":"次の駅は、東京です","slug":"post/japan-travel","href":"/post/japan-travel","pageIcon":"","lastEditedDate":"2024-11-09T06:15:00.190Z","publishDate":1729468800000,"ext":{},"short_id":"11688756"},{"title":"PVE 迁移翻车自救","pageCoverThumbnail":"","category":null,"tags":["折腾","PVE"],"summary":null,"slug":"post/pve-migration-rescue","href":"/post/pve-migration-rescue","pageIcon":"","lastEditedDate":"2024-10-13T12:39:01.428Z","publishDate":1728777600000,"ext":{},"short_id":"11d88756"},{"title":"译：使 Rust library 兼容 no_std","pageCoverThumbnail":"","category":null,"tags":["Rust"],"summary":"Effective Rust Item 33","slug":"post/rust-no-std","href":"/post/rust-no-std","pageIcon":"","lastEditedDate":"2024-09-21T10:57:48.427Z","publishDate":1726876800000,"ext":{},"short_id":"4e5d7fc0"},{"title":"Infra 窘境","pageCoverThumbnail":"","category":null,"tags":["碎碎念"],"summary":"前段时间秋招也陆续开始了，偶尔有师弟问我不想写业务，怎么才能做 infra，其实我是劝退的。算下来我毕业正式工作也一年多了，趁机从个人角度发表点暴论","slug":"post/infra-dilemma","href":"/post/infra-dilemma","pageIcon":"","lastEditedDate":"2024-09-12T13:38:22.109Z","publishDate":1725321600000,"ext":{},"short_id":"5b4b2d85"},{"title":"迁移博客到 Notion","pageCoverThumbnail":"","category":null,"tags":["折腾"],"summary":"Make Notion Great Again！","slug":"post/migrate-blog-to-notion","href":"/post/migrate-blog-to-notion","pageIcon":"","lastEditedDate":"2024-11-17T13:06:23.284Z","publishDate":1724544000000,"ext":{},"short_id":"a06c26b2"},{"title":"Longhorn 浅析","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fc3967b7e-bde2-4b5b-b5f6-97de21642f16%2Flonghorn.png?table=block&id=bde25ba8-2381-4da6-bb5e-5787ace45def&t=bde25ba8-2381-4da6-bb5e-5787ace45def&width=800&cache=v2","category":null,"tags":["存储","分布式系统"],"summary":"Longhorn 是一个 Go 实现的 Cloud Native Storage，比较好奇作为一个提供块存储的分布式存储系统，使用 Go 实现，会面临哪些挑战，性能方面要又要如何优化","slug":"post/longhorn","href":"/post/longhorn","pageIcon":"","lastEditedDate":"2024-10-08T10:27:34.636Z","publishDate":1723075200000,"ext":{},"short_id":"bde25ba8"},{"title":"从 Linux 内核看读写锁设计","pageCoverThumbnail":"","category":null,"tags":["Linux","操作系统"],"summary":"前段时间看了《Linux内核设计与实现》，第 10 章「内核同步方法」中提到了几种内核中的读写锁。它们分别代表了几种比较典型的读写锁设计，非常值得学习，这里记录一下，讨论是基于 2.6 内核和 x86 体系结构的基础上进行的","slug":"post/kernel-rwlock","href":"/post/kernel-rwlock","pageIcon":"","lastEditedDate":"2024-11-22T13:43:47.074Z","publishDate":1704326400000,"ext":{},"short_id":"0e96a78e"},{"title":"2023 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2F9e8551ce-463f-41bc-b07f-5a8362a94846%2F2023summary.jpg?table=block&id=d26ce18a-fa8d-4df4-8b82-69c419c5b621&t=d26ce18a-fa8d-4df4-8b82-69c419c5b621&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":null,"slug":"post/2023summary","href":"/post/2023summary","pageIcon":"","lastEditedDate":"2024-08-27T15:25:27.095Z","publishDate":1703980800000,"ext":{},"short_id":"d26ce18a"},{"title":"混乱的软中断概念","pageCoverThumbnail":"","category":null,"tags":["Linux","操作系统"],"summary":"软中断（softirq）和软件中断（software interrupt）","slug":"post/softirq-and-software-interrupt","href":"/post/softirq-and-software-interrupt","pageIcon":"","lastEditedDate":"2024-11-22T13:43:43.070Z","publishDate":1692144000000,"ext":{},"short_id":"3327d648"},{"title":"PVE8 上启用 12 代 Intel CPU 核显 SR-IOV","pageCoverThumbnail":"","category":null,"tags":["折腾","PVE"],"summary":"拯救我的 Galgame 和追番体验～","slug":"post/pve8-intel-sr-iov","href":"/post/pve8-intel-sr-iov","pageIcon":"","lastEditedDate":"2024-10-13T03:51:26.211Z","publishDate":1691280000000,"ext":{},"short_id":"d5fd419b"},{"title":"容器标准和生态","pageCoverThumbnail":"","category":null,"tags":["Cloud Native"],"summary":null,"slug":"post/container-spec-ecosystem","href":"/post/container-spec-ecosystem","pageIcon":"","lastEditedDate":"2024-08-27T15:25:22.390Z","publishDate":1689120000000,"ext":{},"short_id":"deaccfa2"},{"title":"Vim as an IDE","pageCoverThumbnail":"","category":null,"tags":["折腾","Vim"],"summary":"记录 Vim 入教过程和折腾记录","slug":"post/vim-as-an-ide","href":"/post/vim-as-an-ide","pageIcon":"","lastEditedDate":"2024-08-27T15:25:23.390Z","publishDate":1687392000000,"ext":{},"short_id":"f26f0a34"},{"title":"Kubernetes CSI","pageCoverThumbnail":"","category":null,"tags":["Cloud Native","Kubernetes"],"summary":null,"slug":"post/kubernetes-csi","href":"/post/kubernetes-csi","pageIcon":"","lastEditedDate":"2024-08-27T15:25:21.307Z","publishDate":1686960000000,"ext":{},"short_id":"a23d61e0"},{"title":"2022 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2F967f6a03-c26f-451c-971a-3b507ae769f3%2Ftencent_badge.jpg?table=block&id=cc463e20-63ea-4132-acea-84fc7307dde8&t=cc463e20-63ea-4132-acea-84fc7307dde8&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":null,"slug":"post/2022summary","href":"/post/2022summary","pageIcon":"","lastEditedDate":"2024-11-10T10:41:29.538Z","publishDate":1672444800000,"ext":{},"short_id":"cc463e20"},{"title":"The Google File System 论文概览","pageCoverThumbnail":"","category":null,"tags":["论文阅读","分布式系统"],"summary":null,"slug":"post/gfs-paper","href":"/post/gfs-paper","pageIcon":"","lastEditedDate":"2024-08-27T15:25:15.003Z","publishDate":1644796800000,"ext":{},"short_id":"1eecd7c4"},{"title":"MIT6.824 Lab1 MapReduce","pageCoverThumbnail":"","category":null,"tags":["分布式系统"],"summary":null,"slug":"post/mit6824-lab1-mapreduce","href":"/post/mit6824-lab1-mapreduce","pageIcon":"","lastEditedDate":"2024-08-27T15:25:13.836Z","publishDate":1644624000000,"ext":{},"short_id":"514ae2e3"},{"title":"蒟蒻的 2021 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fd8a67659-bb3d-447e-b70f-7aa9f7987b88%2Fgpnu.jpeg?table=block&id=7b0eb02d-8b44-45f3-b593-52c0a62f4595&t=7b0eb02d-8b44-45f3-b593-52c0a62f4595&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":"落落落落的一年","slug":"post/2021summary","href":"/post/2021summary","pageIcon":"","lastEditedDate":"2024-08-27T15:25:12.636Z","publishDate":1640908800000,"ext":{},"short_id":"7b0eb02d"},{"title":"蒟蒻的 2020 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2F1dc80ee3-5c1d-4af8-a284-d7896174816a%2Ficpc%25E5%258D%2597%25E4%25BA%25AC.png?table=block&id=37c4cfd9-62a3-41bb-9989-f9df38c45d04&t=37c4cfd9-62a3-41bb-9989-f9df38c45d04&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":"转眼三年已经过去，我也迎来了毕业","slug":"post/2020summary","href":"/post/2020summary","pageIcon":"","lastEditedDate":"2024-08-27T15:25:11.370Z","publishDate":1610236800000,"ext":{},"short_id":"37c4cfd9"},{"title":"蒟蒻的 2019 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2F2fdfd260-e2c8-42ea-9d8d-6fd6795797dc%2Flanqiao.jpeg?table=block&id=8aa3f594-ff5d-4f99-b0a2-fa09bb32ba84&t=8aa3f594-ff5d-4f99-b0a2-fa09bb32ba84&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":"随着2019年最后一晚的落幕，21世纪的10年代也结束了，今年的我无论是在技术上还是别的方面，都成长了许多。以本文记录我的技术路程，迎接新的一年","slug":"post/2019summary","href":"/post/2019summary","pageIcon":"","lastEditedDate":"2024-08-27T15:25:09.504Z","publishDate":1577836800000,"ext":{},"short_id":"8aa3f594"},{"title":"蒟蒻的 2018 年度总结","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Ff362b439-342f-451a-b70e-41ec07d86ab3%2F2018summary.jpeg?table=block&id=806f9f46-c738-4c87-9957-e73d11ec44bd&t=806f9f46-c738-4c87-9957-e73d11ec44bd&width=800&cache=v2","category":null,"tags":["碎碎念"],"summary":"又是一年过去了，2018算是人生中最重要的转折点之一，总结一下今年的经历和感想，也算是记录我的技术路程","slug":"post/2018summary","href":"/post/2018summary","pageIcon":"","lastEditedDate":"2024-08-27T15:25:07.408Z","publishDate":1546214400000,"ext":{},"short_id":"806f9f46"}],"tagOptions":[{"name":"碎碎念","color":"red","count":8},{"name":"分布式系统","color":"gray","count":5},{"name":"折腾","color":"blue","count":4},{"name":"论文阅读","color":"orange","count":3},{"name":"操作系统","color":"blue","count":3},{"name":"Linux","color":"purple","count":2},{"name":"Cloud Native","color":"brown","count":2},{"name":"数据库","color":"yellow","count":2},{"name":"PVE","color":"blue","count":2},{"name":"存储","color":"default","count":1},{"name":"Vim","color":"pink","count":1},{"name":"Kubernetes","color":"green","count":1},{"name":"Rust","color":"orange","count":1},{"name":"旅行","color":"yellow","count":1}],"categoryOptions":[],"customNav":[{"icon":"fas fa-link","name":"友链","href":"/links","target":"_self","show":true},{"icon":null,"name":"关于","href":"/about","target":"_self","show":true}],"customMenu":[{"date":{"start_date":"2023-03-23"},"type":"Menu","slug":"/","title":"🏠 首页","status":"Published","category":"","comment":"","publishDate":1679529600000,"publishDay":"2023-3-23","lastEditedDate":"2024-08-29T13:50:49.016Z","lastEditedDay":"2024-8-29","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[],"href":"/","name":"🏠 首页","target":"_self","password":"","show":true},{"date":{"start_date":"2024-08-24","date_format":"relative"},"type":"Menu","slug":"/archive","title":"📃 归档","status":"Published","category":"","comment":"","publishDate":1724457600000,"publishDay":"2024-8-24","lastEditedDate":"2024-08-25T14:25:34.971Z","lastEditedDay":"2024-8-25","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[],"href":"/archive","name":"📃 归档","target":"_self","password":"","show":true},{"date":{"start_date":"2023-03-23"},"type":"Menu","slug":"/links","summary":"跳转到/links","title":"👬 友链","status":"Published","category":"","comment":"","publishDate":1679529600000,"publishDay":"2023-3-23","lastEditedDate":"2024-08-29T13:50:37.252Z","lastEditedDay":"2024-8-29","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[],"href":"/links","name":"👬 友链","target":"_self","password":"","show":true},{"date":{"start_date":"2023-03-23"},"type":"Menu","slug":"/about","summary":"跳转到/about","title":"👤 关于","status":"Published","category":"","comment":"","publishDate":1679529600000,"publishDay":"2023-3-23","lastEditedDate":"2024-08-29T13:50:43.389Z","lastEditedDay":"2024-8-29","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[],"href":"/about","name":"👤 关于","target":"_self","password":"","show":true}],"postCount":24,"latestPosts":[{"id":"14688756-3979-80f8-8f88-d0bb8697b4a4","date":{"start_date":"2024-12-21","date_format":"relative"},"type":"Post","slug":"post/deterministic-simulator","tags":["分布式系统"],"summary":"最初接触到确定性模拟的概念是在 2022 年 Rust China Conf 上听的一场演讲，后续一直持续关注着这个领域，也在腾讯组内分享过相关议题","title":"确定性模拟器","status":"Published","category":"","comment":"","publishDate":1734739200000,"publishDay":"2024-12-21","lastEditedDate":"2024-12-21T17:14:04.798Z","lastEditedDay":"2024-12-21","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"分布式系统","color":"gray"}],"href":"/post/deterministic-simulator","target":"_self","password":""},{"id":"14688756-3979-806c-af3c-f23f4c85d88e","date":{"start_date":"2024-11-22","date_format":"relative"},"type":"Post","slug":"post/coroutine","tags":["操作系统"],"summary":"最近经常被各种人问到一些关于协程的事情，例如 xx 语言的 xx 是不是协程，xx 语言和 xx 语言的协程有什么区别，我不得不一次次 share 出我的文章，索性直接发到 blog 上吧","title":"浅谈协程","status":"Published","category":"","comment":"","publishDate":1732233600000,"publishDay":"2024-11-22","lastEditedDate":"2024-11-22T15:31:35.278Z","lastEditedDay":"2024-11-22","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"操作系统","color":"blue"}],"href":"/post/coroutine","target":"_self","password":""},{"id":"12988756-3979-8065-aeb4-e6ec1258ed90","date":{"start_date":"2024-11-17","date_format":"relative"},"type":"Post","slug":"post/memorydb","tags":["分布式系统","数据库","论文阅读"],"summary":"MemoryDB 是 Amazon 的一个 Redis 兼容的 KV 数据库，论文发表在 SIGMOD 2024 上","title":"MemoryDB: Redis + Remote Log","status":"Published","category":"","comment":"","publishDate":1731801600000,"publishDay":"2024-11-17","lastEditedDate":"2024-11-18T03:17:24.166Z","lastEditedDay":"2024-11-18","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"分布式系统","color":"gray"},{"name":"数据库","color":"yellow"},{"name":"论文阅读","color":"orange"}],"href":"/post/memorydb","target":"_self","password":""},{"id":"94e03781-e74c-41d0-89f7-df2e2a7ad93f","date":{"start_date":"2024-10-27","date_format":"relative"},"type":"Post","slug":"post/db-mmap","tags":["论文阅读","数据库"],"title":"应该在 DBMS 中使用 MMAP 吗？","status":"Published","category":"","comment":"","publishDate":1729987200000,"publishDay":"2024-10-27","lastEditedDate":"2024-11-03T07:26:55.807Z","lastEditedDay":"2024-11-3","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"论文阅读","color":"orange"},{"name":"数据库","color":"yellow"}],"href":"/post/db-mmap","target":"_self","password":""},{"id":"11688756-3979-8028-b7d8-ce8bf2ec4253","date":{"start_date":"2024-10-21","date_format":"relative"},"type":"Post","slug":"post/japan-travel","tags":["碎碎念","旅行"],"summary":"次の駅は、東京です","title":"日本游记","status":"Published","category":"","comment":"","publishDate":1729468800000,"publishDay":"2024-10-21","lastEditedDate":"2024-11-09T06:15:00.190Z","lastEditedDay":"2024-11-9","fullWidth":false,"pageIcon":"","pageCover":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fb07e03ea-454d-48b4-a53c-169003780460%2FDSC_0663.jpg?table=block&id=11688756-3979-8028-b7d8-ce8bf2ec4253&t=11688756-3979-8028-b7d8-ce8bf2ec4253&width=800&cache=v2","pageCoverThumbnail":"https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F4cc04375-345a-4a1e-bdf0-3a7c88ef0425%2Fb07e03ea-454d-48b4-a53c-169003780460%2FDSC_0663.jpg?table=block&id=11688756-3979-8028-b7d8-ce8bf2ec4253&t=11688756-3979-8028-b7d8-ce8bf2ec4253&width=800&cache=v2","ext":{},"tagItems":[{"name":"碎碎念","color":"red"},{"name":"旅行","color":"yellow"}],"href":"/post/japan-travel","target":"_self","password":""},{"id":"11d88756-3979-8080-877d-cf9a2d058532","date":{"start_date":"2024-10-13","date_format":"relative"},"type":"Post","slug":"post/pve-migration-rescue","tags":["折腾","PVE"],"title":"PVE 迁移翻车自救","status":"Published","category":"","comment":"","publishDate":1728777600000,"publishDay":"2024-10-13","lastEditedDate":"2024-10-13T12:39:01.428Z","lastEditedDay":"2024-10-13","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"折腾","color":"blue"},{"name":"PVE","color":"blue"}],"href":"/post/pve-migration-rescue","target":"_self","password":""}],"post":{"id":"14688756-3979-806c-af3c-f23f4c85d88e","date":{"start_date":"2024-11-22","date_format":"relative"},"type":"Post","slug":"post/coroutine","tags":["操作系统"],"summary":"最近经常被各种人问到一些关于协程的事情，例如 xx 语言的 xx 是不是协程，xx 语言和 xx 语言的协程有什么区别，我不得不一次次 share 出我的文章，索性直接发到 blog 上吧","title":"浅谈协程","status":"Published","category":"","comment":"","publishDate":1732233600000,"publishDay":"2024-11-22","lastEditedDate":"2024-11-22T15:31:35.278Z","lastEditedDay":"2024-11-22","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"操作系统","color":"blue"}],"href":"/post/coroutine","target":"_self","password":"","blockMap":{"block":{"14688756-3979-806c-af3c-f23f4c85d88e":{"value":{"id":"14688756-3979-806c-af3c-f23f4c85d88e","version":295,"type":"page","content":["14688756-3979-807a-b4fc-d59ffda28582","14688756-3979-801f-b7c3-d62a97a4a26a","14688756-3979-804a-9ba2-d8e79a9f896c","14688756-3979-80c4-a8f0-f61f3800faf6","14688756-3979-80fe-a80a-fcd165f32bc7","14688756-3979-8047-951e-e800d02438dc","14688756-3979-80b5-bf64-c8eccabec849","14688756-3979-8032-b856-dcd1b417c83c","14688756-3979-808a-9ce5-c10168ff51fd","14688756-3979-80da-a519-d7f366691b5f","14688756-3979-805e-b266-ee0ab49f5057","14688756-3979-8045-a913-c7894ec76e41","14688756-3979-807e-a8d5-e54dfb0fe98b","14688756-3979-80dd-ace1-dffbd89acf46","14688756-3979-805b-b451-f729f8d1ac1b","14688756-3979-8056-bc1f-f8f443ffb009","14688756-3979-804d-a80d-d28d12dd75c2","14688756-3979-80e8-9fc7-d8fb17484f7c","14688756-3979-80a0-97cd-ca331630f4f4","14688756-3979-809e-81d2-c77541de17fc","14688756-3979-8038-9106-f3400dd5ab36","14688756-3979-802a-8710-ec1ae9775392","14688756-3979-801b-8e1e-cf72d1848856","14688756-3979-8016-8485-fd784b6b13c9","14688756-3979-80c0-b015-cb541aa4362a","14688756-3979-802d-991b-d3b9e56d1925","14688756-3979-808a-844f-d74ae87600dc","14688756-3979-80bd-b5d1-f0014db863a9","14688756-3979-8095-904f-e1f70a447108","14688756-3979-8087-9651-f7edf931f776","14688756-3979-8030-9993-fdec25e9e04f","14688756-3979-80dc-9f6c-f60f88eb3735","14688756-3979-80a0-94a4-eb51263679a8","14688756-3979-802e-b4a8-f44b9d6b0166","14688756-3979-800d-8df6-f3fb9ba47926","14688756-3979-8016-bf4a-ed5e27939ad8","14688756-3979-809a-af5f-ee8cc4612737","14688756-3979-80aa-a95c-e9d65dbc3da3","14688756-3979-8090-9e2a-dedf33714a35","14688756-3979-8091-84b3-d137c6787666","14688756-3979-803f-811c-ca1f8de9ff29","14688756-3979-807a-9fb3-db5d99c28acc","14688756-3979-800b-b731-c05c8bbbed9c","14688756-3979-8001-9207-d993f33a6180","14688756-3979-804f-9eb6-fc0203cbae7c","14688756-3979-80a5-b3ad-e71278ef6f81","14688756-3979-8002-b593-cc3ba6311252","14688756-3979-8080-a7e3-eda84e03c576","14688756-3979-8086-a59e-d4cbacfddf31","14688756-3979-808a-96f4-f7a7e87a9fa8","14688756-3979-8055-9c07-da37d09532e8","14688756-3979-8052-9850-eb68e59102ba","14688756-3979-805e-996b-f4ced1b70697","14688756-3979-80db-9ed1-c3e5606dbf65","14688756-3979-80e1-a78f-c90acfe08dff","14688756-3979-802d-b836-ec121eac02ad","14688756-3979-80f8-98ee-d2bd64e6d321","14688756-3979-8027-a249-cd547c752b7c","14688756-3979-80cf-8f36-c05ec9de20d7","14688756-3979-8008-b3e4-f888cc6e4360","14688756-3979-80c5-bb29-c9576222424a","14688756-3979-805b-9255-f9149fc739af","14688756-3979-8015-8a90-fe22b70056f9","14688756-3979-8000-8f6b-e5f2c194d0a6","14688756-3979-8045-9bea-c54afcbfbe94","14688756-3979-8066-9257-fcc6f52ee1e0","14688756-3979-80cc-b6c2-c00e0d7fa768","14688756-3979-8052-a1f9-d17c88d3d214","14688756-3979-807f-8586-e5faaef1e703","14688756-3979-8080-ba04-e791d5d22318","14688756-3979-80f2-9c37-f6e2c105bd82","14688756-3979-8079-bd77-f60092eb95af","14688756-3979-800d-bbc9-f25b2ca75edd","14688756-3979-80d9-bb4e-cc6f1897872a","14688756-3979-8009-be36-f0d02b2506cf","14688756-3979-8038-8653-c50b4c10dc7d","14688756-3979-8057-9f29-cec2e5e65e3f","14688756-3979-806a-9d97-ee6af88af9cc","14688756-3979-809c-add4-c292aedb0d04","14688756-3979-80de-93f3-c8da4704bb58"],"format":{"page_font":"mono","block_locked":false,"block_locked_by":"919e7400-5a69-4402-b2e1-f7d99cc48131","copied_from_pointer":{"id":"2eace25c-842c-46fd-9ccb-e9190981b6c3","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"page_cover_position":0.6,"social_media_image_preview_url":"https://prod-files-secure.s3.us-west-2.amazonaws.com/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/38422bf3-1271-418a-8cbc-9c612d917667/SocialMediaPreviewImage.png"},"created_time":1732280777456,"last_edited_time":1732289495278,"parent_id":"0bb2e606-8d0c-4f7c-aca9-70986e90c055","parent_table":"collection","alive":true,"copied_from":"2eace25c-842c-46fd-9ccb-e9190981b6c3","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"0dc306ca-50a6-4917-9b5a-85a61f0f66f5":{"value":{"id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","version":188,"type":"collection_view_page","content":["c12d1fcb-2e22-4dc3-a5f5-b5010c63059a"],"view_ids":["2efe7048-0d5f-4e04-8b4e-2a3793ad6aef","14688756-3979-80e7-97c9-000c212f8370","14588756-3979-8039-9990-000cefddccf8","55d7f55d-3bd1-4a1a-97c9-a6c8354ecd3d","8dfd415c-71af-41f9-b984-e7182bf2210b","3c2f93d8-6810-42a1-87da-55f1ecda9bca"],"collection_id":"0bb2e606-8d0c-4f7c-aca9-70986e90c055","format":{"site_id":"cd684fc1-aa3f-4897-8f3a-ec903e77f063","block_locked":false,"block_locked_by":"27074aef-7216-41ed-baef-d9b53addd870","collection_pointer":{"id":"0bb2e606-8d0c-4f7c-aca9-70986e90c055","table":"collection","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"copied_from_pointer":{"id":"02ab3b86-7800-4aa6-9e9e-415905ef32a5","table":"block","spaceId":"6c096b44-beb9-48ee-8f92-1efdde47f3a3"},"page_cover_position":0.5,"social_media_image_preview_url":"https://prod-files-secure.s3.us-west-2.amazonaws.com/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/16412a4f-3220-4021-b553-56a010794a94/SocialMediaPreviewImage.png"},"permissions":[{"role":"editor","type":"user_permission","user_id":"919e7400-5a69-4402-b2e1-f7d99cc48131"},{"role":"reader","type":"public_permission","added_timestamp":1724420656606,"allow_duplicate":false}],"created_time":1724383978099,"last_edited_time":1734176617456,"parent_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425","parent_table":"space","alive":true,"copied_from":"02ab3b86-7800-4aa6-9e9e-415905ef32a5","file_ids":["49b4570c-b2f0-457b-81b7-b68e2693a471","708d7d1d-6233-408b-952f-594bb2831de7","145cea07-09d7-4146-bcf5-bebd1518488c","a9af1d6b-f284-4734-ba06-990353cf3f84","20ee2bf3-8f75-4cd7-9d6e-e1a780d5f17c","16412a4f-3220-4021-b553-56a010794a94"],"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-807a-b4fc-d59ffda28582":{"value":{"id":"14688756-3979-807a-b4fc-d59ffda28582","version":645,"type":"text","properties":{"title":[["最近经常被各种人问到一些关于协程的事情，例如 xx 语言的 xx 是不是协程，xx 语言和 xx 语言的协程有什么区别，我不得不一次次 share 出我的文章，索性直接发到 blog 上吧"]]},"created_time":1732280923528,"last_edited_time":1732282935710,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-801f-b7c3-d62a97a4a26a":{"value":{"id":"14688756-3979-801f-b7c3-d62a97a4a26a","version":3,"type":"text","created_time":1732281007656,"last_edited_time":1732281007657,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-804a-9ba2-d8e79a9f896c":{"value":{"id":"14688756-3979-804a-9ba2-d8e79a9f896c","version":285,"type":"text","properties":{"title":[["首先，协程是什么？一开始应该抛开一切具体语言的实现去理解协程，给出一个明确定义，但协程的定义实在太多，并且扩展出了各种不同形态，这里我们简单定义"],["协程就是一个「可以暂停和恢复的函数」",[["b"]]]]},"format":{"copied_from_pointer":{"id":"ef8f4190-8efd-4c26-bbcb-b803926d0bd6","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008115,"last_edited_time":1732282355966,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"ef8f4190-8efd-4c26-bbcb-b803926d0bd6","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80c4-a8f0-f61f3800faf6":{"value":{"id":"14688756-3979-80c4-a8f0-f61f3800faf6","version":3,"type":"text","format":{"copied_from_pointer":{"id":"1be2d20d-7cef-4fb0-ae6d-16c07777662f","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008116,"last_edited_time":1732281008121,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"1be2d20d-7cef-4fb0-ae6d-16c07777662f","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80fe-a80a-fcd165f32bc7":{"value":{"id":"14688756-3979-80fe-a80a-fcd165f32bc7","version":23,"type":"sub_header","properties":{"title":[["达夫设备"]]},"format":{"copied_from_pointer":{"id":"5d4249eb-e7c0-4089-a315-3c7a06a13a3c","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008116,"last_edited_time":1732281938507,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"5d4249eb-e7c0-4089-a315-3c7a06a13a3c","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8047-951e-e800d02438dc":{"value":{"id":"14688756-3979-8047-951e-e800d02438dc","version":3,"type":"text","properties":{"title":[["了解了协程的定义，就是实现问题了"]]},"format":{"copied_from_pointer":{"id":"64db2bcc-926a-444a-8cad-72ac0f1aa266","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008117,"last_edited_time":1732281008121,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"64db2bcc-926a-444a-8cad-72ac0f1aa266","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80b5-bf64-c8eccabec849":{"value":{"id":"14688756-3979-80b5-bf64-c8eccabec849","version":3,"type":"text","properties":{"title":[["来看一个 fib 协程"]]},"format":{"copied_from_pointer":{"id":"d03a7d99-bdb0-4be1-a153-7c24e459ff3b","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008117,"last_edited_time":1732281008121,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"d03a7d99-bdb0-4be1-a153-7c24e459ff3b","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8032-b856-dcd1b417c83c":{"value":{"id":"14688756-3979-8032-b856-dcd1b417c83c","version":113,"type":"code","properties":{"title":[["generator<int> fib() {\n    int a = 1, b = 1;\n    yield a;\n    yield b;\n    while(true) {\n        int c = a + b;\n        yield c;\n        a = b;\n        b = c;\n    }\n}"]],"language":[["cpp"]]},"format":{"copied_from_pointer":{"id":"08693291-b31f-448a-901e-68fbcaa71bff","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008117,"last_edited_time":1732283875176,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"08693291-b31f-448a-901e-68fbcaa71bff","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-808a-9ce5-c10168ff51fd":{"value":{"id":"14688756-3979-808a-9ce5-c10168ff51fd","version":3,"type":"text","properties":{"title":[["对 fib 进行调用，会返回斐波那契数列 1，1，2，3，5，8… "]]},"format":{"copied_from_pointer":{"id":"2fb50984-66e8-4e30-8924-4ca085096bed","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008118,"last_edited_time":1732281008121,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"2fb50984-66e8-4e30-8924-4ca085096bed","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80da-a519-d7f366691b5f":{"value":{"id":"14688756-3979-80da-a519-d7f366691b5f","version":3,"type":"text","properties":{"title":[["在 "],["yield",[["c"]]],[" 时，协程被暂停，再次调用，协程被恢复"]]},"format":{"copied_from_pointer":{"id":"ae87511d-3d33-477f-a731-6ffb73b733e0","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281008118,"last_edited_time":1732281008121,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"ae87511d-3d33-477f-a731-6ffb73b733e0","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-805e-b266-ee0ab49f5057":{"value":{"id":"14688756-3979-805e-b266-ee0ab49f5057","version":3,"type":"text","created_time":1732281252221,"last_edited_time":1732281252222,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8045-a913-c7894ec76e41":{"value":{"id":"14688756-3979-8045-a913-c7894ec76e41","version":3,"type":"text","properties":{"title":[["现在我们要实现类似的效果，核心无非两点，如何暂停和如何恢复"]]},"format":{"copied_from_pointer":{"id":"329ea329-5473-4379-993e-1c881e4a89bb","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281252382,"last_edited_time":1732281252387,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"329ea329-5473-4379-993e-1c881e4a89bb","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-807e-a8d5-e54dfb0fe98b":{"value":{"id":"14688756-3979-807e-a8d5-e54dfb0fe98b","version":3,"type":"text","properties":{"title":[["一种简单的协程实现是达夫设备，它是一个状态机，状态机上的状态对应每个 yield 的位置"]]},"format":{"copied_from_pointer":{"id":"4ab48ac8-5e73-4bc3-a249-b26231ae1279","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281252382,"last_edited_time":1732281252387,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"4ab48ac8-5e73-4bc3-a249-b26231ae1279","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80dd-ace1-dffbd89acf46":{"value":{"id":"14688756-3979-80dd-ace1-dffbd89acf46","version":3,"type":"text","properties":{"title":[["首先通过 static 变量存储状态（也可以通过一个外部的协程结构体来在任意地方存储），接着，yield 时直接 return 返回控制权，调用时通过 switch + goto 跳转回之前的位置，也就是上次 yield 后的位置，这就恢复了状态："]]},"format":{"copied_from_pointer":{"id":"dfb6d957-7ba0-48e6-ad44-3f21b2367263","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281252383,"last_edited_time":1732281252387,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"dfb6d957-7ba0-48e6-ad44-3f21b2367263","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-805b-b451-f729f8d1ac1b":{"value":{"id":"14688756-3979-805b-b451-f729f8d1ac1b","version":3,"type":"code","properties":{"title":[["int fib() {\n    static int state = 0;\n    static int a = 1;\n    static int b = 1;\n    static int c = 0;\n\n    switch (state) {\n        case 0:\n            state = 1;\n            goto s0;\n        case 1:\n            state = 2;\n            goto s1;\n        case 2:\n            state = 3;\n            goto s2;\n        case 3:\n            goto s3;\n    }\n\ns0:\n    return a;\ns1:\n    return b;\ns2:\n    while(true) {\n        c = a + b;\n        return c;\n        s3:\n        a = b;\n        b = c;\n    }\n}"]],"language":[["cpp"]]},"format":{"copied_from_pointer":{"id":"3db09c17-c6e7-49cf-bdcb-16e8083975c8","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281252383,"last_edited_time":1732281252387,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"3db09c17-c6e7-49cf-bdcb-16e8083975c8","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8056-bc1f-f8f443ffb009":{"value":{"id":"14688756-3979-8056-bc1f-f8f443ffb009","version":3,"type":"text","format":{"copied_from_pointer":{"id":"9a0305d0-72a5-462b-ae7d-abd97d708a2e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442296,"last_edited_time":1732281442297,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-804d-a80d-d28d12dd75c2":{"value":{"id":"14688756-3979-804d-a80d-d28d12dd75c2","version":7,"type":"sub_header","properties":{"title":[["扩展"]]},"format":{"copied_from_pointer":{"id":"0dc54828-8c7b-4fb4-ab34-21434c5f8abd","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442476,"last_edited_time":1732282739846,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"0dc54828-8c7b-4fb4-ab34-21434c5f8abd","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80e8-9fc7-d8fb17484f7c":{"value":{"id":"14688756-3979-80e8-9fc7-d8fb17484f7c","version":3,"type":"text","properties":{"title":[["有了基本的协程后，就可以谈谈其它语言中的 generator、async / await、goroutine / virtual thread 等实现了"]]},"format":{"copied_from_pointer":{"id":"04b4385e-3958-4092-adcd-1b021808327a","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442476,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"04b4385e-3958-4092-adcd-1b021808327a","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80a0-97cd-ca331630f4f4":{"value":{"id":"14688756-3979-80a0-97cd-ca331630f4f4","version":3,"type":"text","format":{"copied_from_pointer":{"id":"bb638704-7d23-433d-9fdb-4f41dc58055f","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"bb638704-7d23-433d-9fdb-4f41dc58055f","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-809e-81d2-c77541de17fc":{"value":{"id":"14688756-3979-809e-81d2-c77541de17fc","version":30,"type":"text","properties":{"title":[["对于 generator 和 async / await 模式，实际上和我们上面的实现是类似的，都是一个状态机。但它们通过编译器来生成了这堆繁琐的部分，作为语言的一个语法来提供，可以说是真正能用的协程。例如这样一段 Rust 的 generator 代码"]]},"format":{"copied_from_pointer":{"id":"b193e0cc-ddd1-43c7-a373-cf786f9bde5d","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281815954,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"b193e0cc-ddd1-43c7-a373-cf786f9bde5d","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8038-9106-f3400dd5ab36":{"value":{"id":"14688756-3979-8038-9106-f3400dd5ab36","version":19,"type":"code","properties":{"title":[["#![feature(generators, generator_trait)]\nuse std::ops::Generator;\n\nuse std::pin::Pin;\n\nfn main() {\n    let mut gen = ||{\n        yield 1;\n        yield 2;\n        yield 3;\n        return 4;\n    };\n\n    let mut pin = Pin::new(&mut gen);\n    for _ in 0..4 {\n        println!(\"{:?}\", pin.as_mut().resume(()));\n        // Yielded(1)\n        // Yielded(2)\n        // Yielded(3)\n        // Complete(4)\n    }\n}"]],"language":[["Rust"]]},"format":{"code_wrap":false},"created_time":1732281701846,"last_edited_time":1732281708444,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-802a-8710-ec1ae9775392":{"value":{"id":"14688756-3979-802a-8710-ec1ae9775392","version":284,"type":"text","properties":{"title":[["编译器会生成类似这样的实现，和我们前面的达夫设备基本基本没区别："]]},"format":{"copied_from_pointer":{"id":"6b3cffe8-fa03-4daa-a227-771405103578","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281725060,"last_edited_time":1732281855737,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-801b-8e1e-cf72d1848856":{"value":{"id":"14688756-3979-801b-8e1e-cf72d1848856","version":3,"type":"image","properties":{"size":[["720.5KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3a9e11cf-1dd2-4987-b330-8e9d67ea3555/Untitled.png"]]},"format":{"block_width":528,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3a9e11cf-1dd2-4987-b330-8e9d67ea3555/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":1.364306784660767,"copied_from_pointer":{"id":"07001be8-344c-452c-9a3f-b820e07550c8","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"block_preserve_scale":true},"created_time":1732281734174,"last_edited_time":1732281734176,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"07001be8-344c-452c-9a3f-b820e07550c8","file_ids":["3a9e11cf-1dd2-4987-b330-8e9d67ea3555"],"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8016-8485-fd784b6b13c9":{"value":{"id":"14688756-3979-8016-8485-fd784b6b13c9","version":3,"type":"text","format":{"copied_from_pointer":{"id":"6b3cffe8-fa03-4daa-a227-771405103578","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281725164,"last_edited_time":1732281725165,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80c0-b015-cb541aa4362a":{"value":{"id":"14688756-3979-80c0-b015-cb541aa4362a","version":3,"type":"text","format":{"copied_from_pointer":{"id":"6b3cffe8-fa03-4daa-a227-771405103578","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"6b3cffe8-fa03-4daa-a227-771405103578","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-802d-991b-d3b9e56d1925":{"value":{"id":"14688756-3979-802d-991b-d3b9e56d1925","version":3,"type":"text","properties":{"title":[["剩下的一些，就基本属于是对协程的「扩展」了"]]},"format":{"copied_from_pointer":{"id":"a5c7565d-1688-44a4-b7e7-0191f47a411a","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"a5c7565d-1688-44a4-b7e7-0191f47a411a","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-808a-844f-d74ae87600dc":{"value":{"id":"14688756-3979-808a-844f-d74ae87600dc","version":3,"type":"text","properties":{"title":[["首先就是所谓的调度器，前面 generator 的模式是没有调度的，或者说，是用户手动控制调度，自己决定何时运行哪个协程，而且这里调度一个协程，就是执行它这个函数。"]]},"format":{"copied_from_pointer":{"id":"3d47a5ff-4f76-4cea-b306-ca77471f4c5f","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"3d47a5ff-4f76-4cea-b306-ca77471f4c5f","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80bd-b5d1-f0014db863a9":{"value":{"id":"14688756-3979-80bd-b5d1-f0014db863a9","version":3,"type":"text","properties":{"title":[["而 async / await 模式就会有调度器，例如一个函数在 await 另一个 async 函数，此时如果该函数并没有执行完成，await 这里就需要等待，控制流会被切换出去（类似 generator 模式的 yield），调度器会进行调度"]]},"format":{"copied_from_pointer":{"id":"bfc34b04-419d-4775-8bda-2af2f1260b8b","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"bfc34b04-419d-4775-8bda-2af2f1260b8b","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8095-904f-e1f70a447108":{"value":{"id":"14688756-3979-8095-904f-e1f70a447108","version":64,"type":"text","properties":{"title":[["在设计更复杂的情况下，调度器的工作会多很多，例如如果不是采用 return 和直接 call 来转移所有权，那就可能需要通过直接跳转的方式（插入汇编或 "],["setjmp",[["c"]]],["/"],["longjmp",[["c"]]],[" 等）来进行协程的所有权转移。以及可能有更复杂的调度策略决定运行哪一个协程"]]},"format":{"copied_from_pointer":{"id":"9af8aab2-1916-42f5-96c0-f2dfda1ccb75","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442477,"last_edited_time":1732282116648,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"9af8aab2-1916-42f5-96c0-f2dfda1ccb75","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8087-9651-f7edf931f776":{"value":{"id":"14688756-3979-8087-9651-f7edf931f776","version":196,"type":"text","properties":{"title":[["南京大学操作系统课程的其中一个实验就是实现这个程度的协程"]]},"created_time":1732282099231,"last_edited_time":1732282217833,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8030-9993-fdec25e9e04f":{"value":{"id":"14688756-3979-8030-9993-fdec25e9e04f","version":11,"type":"bookmark","properties":{"link":[["https://jyywiki.cn/OS/2024/labs/M2.md"]],"title":[["M2: 协程库 (libco)"]],"description":[["我们在《操作系统》课程中学习了线程：只需要 create 和 join 两个 API，我们就能创建和管理线程。我们也知道，线程的创建和执行需要操作系统的帮助：程序就是状态机，如果执行死循环，这个状态机就 “卡死” 了。那么，我们能在一个状态机内，实现多个状态机 (类似线程切换) 的效果吗？"]]},"format":{"bookmark_icon":"https://jyywiki.cn/favicon.ico"},"created_time":1732282150838,"last_edited_time":1732282150841,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80dc-9f6c-f60f88eb3735":{"value":{"id":"14688756-3979-80dc-9f6c-f60f88eb3735","version":3,"type":"text","format":{"copied_from_pointer":{"id":"5c9050e1-b40a-41a1-9924-a5940695b1ff","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442478,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"5c9050e1-b40a-41a1-9924-a5940695b1ff","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80a0-94a4-eb51263679a8":{"value":{"id":"14688756-3979-80a0-94a4-eb51263679a8","version":3,"type":"text","properties":{"title":[["接着是一些协程设计上的问题。前面我们转移所有权的时候，yield 是定向地转移回所有权到 caller 上，因此可以用 return 实现。但更多场景是 yield 时协程 A 希望暂停自己的同时定向恢复协程 B 的运行，但又不希望 A 直接 call B（如果 B 也 call A，就会造成无限递归）。"]]},"format":{"copied_from_pointer":{"id":"36b397f8-f12e-40d8-968b-d9e3d63bb304","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281442478,"last_edited_time":1732281442482,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"36b397f8-f12e-40d8-968b-d9e3d63bb304","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-802e-b4a8-f44b9d6b0166":{"value":{"id":"14688756-3979-802e-b4a8-f44b9d6b0166","version":3,"type":"text","properties":{"title":[["一种实现是基于调度器的，称为非对称协程，A 返回到调度器，要求调度器 call B。这会带来一些性能损失，且不太能保证实时性"]]},"format":{"copied_from_pointer":{"id":"5f64d189-1b92-4e1a-bbe7-dd459aa5c85e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281449863,"last_edited_time":1732281449866,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"5f64d189-1b92-4e1a-bbe7-dd459aa5c85e","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-800d-8df6-f3fb9ba47926":{"value":{"id":"14688756-3979-800d-8df6-f3fb9ba47926","version":3,"type":"image","properties":{"size":[["566.5KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0f71dddd-810b-4881-81bf-75296977bd15/Untitled.png"]]},"format":{"block_width":432,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0f71dddd-810b-4881-81bf-75296977bd15/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.8090787716955942,"copied_from_pointer":{"id":"9bc83de7-24f6-4d92-b183-27ab5474c158","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"block_preserve_scale":true},"created_time":1732281449863,"last_edited_time":1732281449866,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"9bc83de7-24f6-4d92-b183-27ab5474c158","file_ids":["0f71dddd-810b-4881-81bf-75296977bd15"],"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8016-bf4a-ed5e27939ad8":{"value":{"id":"14688756-3979-8016-bf4a-ed5e27939ad8","version":3,"type":"text","properties":{"title":[["另一类是对称协程，需要一些特殊的指令，让 A 能够直接切换到 B，且 B 返回后直接回到了调度器，这个过程对调度器是不知情的，这种设计架空了调度器，实现上更加复杂，但性能更好更加灵活"]]},"format":{"copied_from_pointer":{"id":"259542e0-bc09-4ae3-a9fd-835e4598cd96","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281449863,"last_edited_time":1732281449866,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"259542e0-bc09-4ae3-a9fd-835e4598cd96","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-809a-af5f-ee8cc4612737":{"value":{"id":"14688756-3979-809a-af5f-ee8cc4612737","version":3,"type":"image","properties":{"size":[["388.2KB"]],"title":[["Untitled"]],"source":[["https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f34759e5-39ea-43d1-a126-b96a589bb37b/Untitled.png"]]},"format":{"block_width":384,"display_source":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f34759e5-39ea-43d1-a126-b96a589bb37b/Untitled.png","block_full_width":false,"block_page_width":false,"block_aspect_ratio":0.8912655971479501,"copied_from_pointer":{"id":"2b03f618-e177-4f3d-870d-e8b3def1137e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"block_preserve_scale":true},"created_time":1732281449863,"last_edited_time":1732281449866,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"2b03f618-e177-4f3d-870d-e8b3def1137e","file_ids":["f34759e5-39ea-43d1-a126-b96a589bb37b"],"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80aa-a95c-e9d65dbc3da3":{"value":{"id":"14688756-3979-80aa-a95c-e9d65dbc3da3","version":3,"type":"text","format":{"copied_from_pointer":{"id":"2677f200-0a29-4ac9-8cd2-1558bc7dcfcd","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457698,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"2677f200-0a29-4ac9-8cd2-1558bc7dcfcd","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8090-9e2a-dedf33714a35":{"value":{"id":"14688756-3979-8090-9e2a-dedf33714a35","version":3,"type":"text","properties":{"title":[["设计上另外一个重要的区别是协程的栈帧，也就是有栈协程和无栈协程。前面实现的协程是无栈协程，它们两个的区别从概念上讲，只有是否保存完整栈帧。"]]},"format":{"copied_from_pointer":{"id":"91a6f149-0b80-4fd5-8156-9eed221606d7","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457698,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"91a6f149-0b80-4fd5-8156-9eed221606d7","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8091-84b3-d137c6787666":{"value":{"id":"14688756-3979-8091-84b3-d137c6787666","version":3,"type":"text","properties":{"title":[["从实现角度来看，无栈线程的「状态」只有局部变量，转移所有权的位置等，对于该协程来说都是固定的，所以每个无栈协程的帧通常是一个定制的结构体（当然编译器帮你实现了），这个结构体就直接代表了整个无栈协程的所有状态，例如前面 "],["fib",[["c"]]],[" 的例子，它的这个结构体可能就是这样的"]]},"format":{"copied_from_pointer":{"id":"5768173d-cb11-4f53-bd04-99d626891d0e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457709,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"5768173d-cb11-4f53-bd04-99d626891d0e","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-803f-811c-ca1f8de9ff29":{"value":{"id":"14688756-3979-803f-811c-ca1f8de9ff29","version":49,"type":"code","properties":{"title":[["struct fib_state {\n    int a;\n    int b;\n    int c;\n    int state;\n}"]],"language":[["cpp"]]},"format":{"copied_from_pointer":{"id":"8706b640-c6de-4ad7-bfa7-220eb3972745","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457710,"last_edited_time":1732289504428,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"8706b640-c6de-4ad7-bfa7-220eb3972745","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-807a-9fb3-db5d99c28acc":{"value":{"id":"14688756-3979-807a-9fb3-db5d99c28acc","version":3,"type":"text","properties":{"title":[["而有栈协程对于帧的保存，无论是哪个协程，都是直接申请一大块内存，将其作为函数的调用栈来使用，一切状态都保存在内部。从这个角度来讲，有栈协程更接近普通函数"]]},"format":{"copied_from_pointer":{"id":"33b9497b-76f3-4349-b8af-5912272c6c28","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457710,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"33b9497b-76f3-4349-b8af-5912272c6c28","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-800b-b731-c05c8bbbed9c":{"value":{"id":"14688756-3979-800b-b731-c05c8bbbed9c","version":12,"type":"code","properties":{"title":[["struct co {\n    byte stack[STACK_SIZE];\n}"]],"language":[["cpp"]]},"format":{"copied_from_pointer":{"id":"266c8217-24bf-4cc6-a7fd-a39728bc48e5","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457710,"last_edited_time":1732289506260,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"266c8217-24bf-4cc6-a7fd-a39728bc48e5","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8001-9207-d993f33a6180":{"value":{"id":"14688756-3979-8001-9207-d993f33a6180","version":3,"type":"text","format":{"copied_from_pointer":{"id":"0d6bdc54-1f39-4c19-bb4e-14268e7d22c4","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457710,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"0d6bdc54-1f39-4c19-bb4e-14268e7d22c4","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-804f-9eb6-fc0203cbae7c":{"value":{"id":"14688756-3979-804f-9eb6-fc0203cbae7c","version":3,"type":"text","properties":{"title":[["在使用上的一个重要区别是，有栈协程可以在任意处挂起，包括嵌套函数。而无栈协程不可以，因为它的帧结构只保存了它自己特定的那几个的状态，所以无法恢复到嵌套函数内部。这使得有栈协程在使用上和普通函数几乎没有区别，就像线程一样"]]},"format":{"copied_from_pointer":{"id":"40c6e958-41e0-417a-af06-223249ebefb3","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"40c6e958-41e0-417a-af06-223249ebefb3","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80a5-b3ad-e71278ef6f81":{"value":{"id":"14688756-3979-80a5-b3ad-e71278ef6f81","version":3,"type":"text","properties":{"title":[["实现上的差异这也体现出无栈协程更加紧凑，开销更小，因为它只保存了必要的状态。而有栈协程需要保存的状态更多，而且通常是有些浪费的（当然也可以让这个栈更小，但要考虑动态扩展的问题）"]]},"format":{"copied_from_pointer":{"id":"7e2485bc-1105-43b3-a384-b78ee3b0f4cd","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"7e2485bc-1105-43b3-a384-b78ee3b0f4cd","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8002-b593-cc3ba6311252":{"value":{"id":"14688756-3979-8002-b593-cc3ba6311252","version":3,"type":"text","format":{"copied_from_pointer":{"id":"0e7f01fc-e9c8-4e8b-86d5-2c60c35f6b08","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"0e7f01fc-e9c8-4e8b-86d5-2c60c35f6b08","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8080-a7e3-eda84e03c576":{"value":{"id":"14688756-3979-8080-a7e3-eda84e03c576","version":371,"type":"text","properties":{"title":[["现在对于各种语言的协程实现就很清晰了，generator 和 async / await 就是编译器层面上实现的无栈协程，以语法糖的方式来提供。而 goroutine / virtual thread 等更类似线程，这是因为他们是有栈协程，还实现了抢占式的调度器来控制协程的执行，当然这里对于这种抢占式设计是不是协程也有不少争议，因为看起来他们从根本上就违背了协程的「协作式」这一想法"]]},"format":{"copied_from_pointer":{"id":"ad88259b-652f-47bd-83c4-4073c48dd952","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732282546423,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"ad88259b-652f-47bd-83c4-4073c48dd952","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8086-a59e-d4cbacfddf31":{"value":{"id":"14688756-3979-8086-a59e-d4cbacfddf31","version":3,"type":"text","format":{"copied_from_pointer":{"id":"ea5c9704-c68d-4692-81a5-1c2d905b96dd","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"ea5c9704-c68d-4692-81a5-1c2d905b96dd","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-808a-96f4-f7a7e87a9fa8":{"value":{"id":"14688756-3979-808a-96f4-f7a7e87a9fa8","version":7,"type":"sub_header","properties":{"title":[["性能"]]},"format":{"copied_from_pointer":{"id":"1872f029-b329-4b68-9a57-74795ca5d5af","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732282724784,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"1872f029-b329-4b68-9a57-74795ca5d5af","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8055-9c07-da37d09532e8":{"value":{"id":"14688756-3979-8055-9c07-da37d09532e8","version":3,"type":"text","properties":{"title":[["对于无栈协程，性能上的优势是明显的，首先它保存的状态是非常轻量的，只保存了必须的状态。其次，无栈协程的场景通常是「协作式」的，也就是 A 运行一会，然后轮到 B 运行"]]},"format":{"copied_from_pointer":{"id":"d540d57e-e4b5-4c82-8c67-df01d4344a23","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"d540d57e-e4b5-4c82-8c67-df01d4344a23","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8052-9850-eb68e59102ba":{"value":{"id":"14688756-3979-8052-9850-eb68e59102ba","version":3,"type":"text","properties":{"title":[["如果通过线程来做这样的操作，大部分时间是浪费在无意义的上下文切换和互斥开销当中了，而无栈协程主动切换控制权，使其每次切换都是有意义的"]]},"format":{"copied_from_pointer":{"id":"e131f57b-00e0-4311-a705-d80ac92a1e6c","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"e131f57b-00e0-4311-a705-d80ac92a1e6c","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-805e-996b-f4ced1b70697":{"value":{"id":"14688756-3979-805e-996b-f4ced1b70697","version":3,"type":"text","format":{"copied_from_pointer":{"id":"5e29dbc3-a9a3-40d7-8d53-1b40cf1c4052","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"5e29dbc3-a9a3-40d7-8d53-1b40cf1c4052","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80db-9ed1-c3e5606dbf65":{"value":{"id":"14688756-3979-80db-9ed1-c3e5606dbf65","version":3,"type":"text","properties":{"title":[["而对于带抢占式调度器的有栈协程，和线程那么像，或者说它就是一种用户线程，那究竟开销少在哪里？"]]},"format":{"copied_from_pointer":{"id":"b26dd93e-c864-4c70-9c17-758069e16a75","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"b26dd93e-c864-4c70-9c17-758069e16a75","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80e1-a78f-c90acfe08dff":{"value":{"id":"14688756-3979-80e1-a78f-c90acfe08dff","version":3,"type":"text","properties":{"title":[["首先，进程和线程的调度需要到内核态做上下文切换，会有以下开销："]]},"format":{"copied_from_pointer":{"id":"70e4154b-ff68-45f6-9abf-4b7b69ce222c","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"70e4154b-ff68-45f6-9abf-4b7b69ce222c","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-802d-b836-ec121eac02ad":{"value":{"id":"14688756-3979-802d-b836-ec121eac02ad","version":3,"type":"numbered_list","properties":{"title":[["切换页表全局目录"]]},"format":{"copied_from_pointer":{"id":"d5aa6adb-ee6c-4b1e-9894-88fe369a4405","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457713,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"d5aa6adb-ee6c-4b1e-9894-88fe369a4405","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80f8-98ee-d2bd64e6d321":{"value":{"id":"14688756-3979-80f8-98ee-d2bd64e6d321","version":3,"type":"numbered_list","properties":{"title":[["切换内核态堆栈"]]},"format":{"copied_from_pointer":{"id":"dd0299de-1c82-4862-a418-7ff61ac84a70","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457713,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"dd0299de-1c82-4862-a418-7ff61ac84a70","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8027-a249-cd547c752b7c":{"value":{"id":"14688756-3979-8027-a249-cd547c752b7c","version":11,"type":"numbered_list","properties":{"title":[["切换硬件上下文（进程恢复前，必须装入寄存器的数据统称为硬件上下文）"]]},"format":{"copied_from_pointer":{"id":"498eb156-7cf4-46a1-a3a1-9287486fdf2d","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457714,"last_edited_time":1732282720020,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"498eb156-7cf4-46a1-a3a1-9287486fdf2d","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80cf-8f36-c05ec9de20d7":{"value":{"id":"14688756-3979-80cf-8f36-c05ec9de20d7","version":3,"type":"numbered_list","properties":{"title":[["刷新TLB"]]},"format":{"copied_from_pointer":{"id":"85be052e-585f-486b-bee8-7e4109f909e3","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457714,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"85be052e-585f-486b-bee8-7e4109f909e3","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8008-b3e4-f888cc6e4360":{"value":{"id":"14688756-3979-8008-b3e4-f888cc6e4360","version":22,"type":"numbered_list","properties":{"title":[["内核调度器的执行"]]},"format":{"copied_from_pointer":{"id":"f44a1d07-8369-4e2c-b5ce-c8693fb06030","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732282696464,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"f44a1d07-8369-4e2c-b5ce-c8693fb06030","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80c5-bb29-c9576222424a":{"value":{"id":"14688756-3979-80c5-bb29-c9576222424a","version":641,"type":"text","properties":{"title":[["其中特别是跨 CPU 导致的 Cache 失效问题，会对性能有明显影响。CPU 之间也可以看作是一种分布式系统，在高性能场景中，跨 CPU 之间的交互就像跨节点的网络通信一样，相对于纯本地运算要慢得多，是要尽力避免的"]]},"format":{"copied_from_pointer":{"id":"7dacffbd-1cbd-44ba-b25d-8bb60706df8f","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732282849006,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"7dacffbd-1cbd-44ba-b25d-8bb60706df8f","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-805b-9255-f9149fc739af":{"value":{"id":"14688756-3979-805b-9255-f9149fc739af","version":3,"type":"text","format":{"copied_from_pointer":{"id":"836e80e6-c5cb-4c56-a51b-58bc7778b9aa","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"836e80e6-c5cb-4c56-a51b-58bc7778b9aa","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8015-8a90-fe22b70056f9":{"value":{"id":"14688756-3979-8015-8a90-fe22b70056f9","version":3,"type":"text","properties":{"title":[["协程调度也需要进行上下文切换，开销主要少在几个方面："]]},"format":{"copied_from_pointer":{"id":"feba93b2-977f-4a74-b5a9-97c87ece9e9e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"feba93b2-977f-4a74-b5a9-97c87ece9e9e","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8000-8f6b-e5f2c194d0a6":{"value":{"id":"14688756-3979-8000-8f6b-e5f2c194d0a6","version":3,"type":"numbered_list","properties":{"title":[["协程栈通常只有几 KB，比数 M 的线程栈要小得多（无栈协程连这部分也不需要，就只是一个普通的函数调用）"]]},"format":{"copied_from_pointer":{"id":"c76229e7-c707-4258-b258-e7a9f6304e79","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"c76229e7-c707-4258-b258-e7a9f6304e79","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8045-9bea-c54afcbfbe94":{"value":{"id":"14688756-3979-8045-9bea-c54afcbfbe94","version":3,"type":"numbered_list","properties":{"title":[["协程的上下文切换没有跨进程，也就不需要修改额外的内核数据结构（页表等），也不会造成 Cache 失效"]]},"format":{"copied_from_pointer":{"id":"cee939b1-598d-4b78-8307-f21eca186bf7","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"cee939b1-598d-4b78-8307-f21eca186bf7","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8066-9257-fcc6f52ee1e0":{"value":{"id":"14688756-3979-8066-9257-fcc6f52ee1e0","version":3,"type":"numbered_list","properties":{"title":[["协程调度在用户态，而线程调度在内核态，每次调度都会有额外的上下文切换（到内核态）。协程避免了大量线程频繁的内核态上下文切换，能充分利用分给一个线程的时间片"]]},"format":{"copied_from_pointer":{"id":"48ae22f1-c942-47ad-9e53-d22711fe9eff","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"48ae22f1-c942-47ad-9e53-d22711fe9eff","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80cc-b6c2-c00e0d7fa768":{"value":{"id":"14688756-3979-80cc-b6c2-c00e0d7fa768","version":3,"type":"text","format":{"copied_from_pointer":{"id":"81fb1e6c-1eac-467a-9b02-ac561e017cea","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"81fb1e6c-1eac-467a-9b02-ac561e017cea","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8052-a1f9-d17c88d3d214":{"value":{"id":"14688756-3979-8052-a1f9-d17c88d3d214","version":9,"type":"sub_header","properties":{"title":[["局限"]]},"format":{"copied_from_pointer":{"id":"369daf97-da56-4570-af95-d2f653000397","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457715,"last_edited_time":1732282746566,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"369daf97-da56-4570-af95-d2f653000397","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-807f-8586-e5faaef1e703":{"value":{"id":"14688756-3979-807f-8586-e5faaef1e703","version":3,"type":"text","properties":{"title":[["协程的轻量和用户态调度带来很高的性能，那么代价是什么？"]]},"format":{"copied_from_pointer":{"id":"35b707fe-0ca9-4cbb-8fb1-8a2733ab5ec8","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"35b707fe-0ca9-4cbb-8fb1-8a2733ab5ec8","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8080-ba04-e791d5d22318":{"value":{"id":"14688756-3979-8080-ba04-e791d5d22318","version":140,"type":"text","properties":{"title":[["首先无栈协程的功能上有局限，例如无法在嵌套函数中挂起，使得它的编程模型还是和普通函数有些不同，也无法实现一些效果，像在大部分语言中 async / await 就会带来传染性"]]},"format":{"copied_from_pointer":{"id":"a31ef332-be39-4f67-b352-15e1b03a1d22","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732282868639,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"a31ef332-be39-4f67-b352-15e1b03a1d22","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80f2-9c37-f6e2c105bd82":{"value":{"id":"14688756-3979-80f2-9c37-f6e2c105bd82","version":3,"type":"text","properties":{"title":[["其次对于有栈协程/用户线程，正是因为它运行在用户态，当涉及需要内核支援的部分时就很被动，例如面对阻塞式 I/O 时，无法察觉导致整个内核线程上的所有协程都被阻塞，或者需要一些比较高级的 CPU 亲和性调度时也难以实现"]]},"format":{"copied_from_pointer":{"id":"e8a58fc1-a3f8-466f-b812-e351bdd56af7","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"e8a58fc1-a3f8-466f-b812-e351bdd56af7","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8079-bd77-f60092eb95af":{"value":{"id":"14688756-3979-8079-bd77-f60092eb95af","version":66,"type":"text","properties":{"title":[["以及如果当调度不是抢占式时，协程如果不让出执行权或者因为一些异常导致执行权没有正常让出，就会一直占用在那里，导致其他协程无法运行。当然 Go 都解决了上面这两个问题，但设计上更加复杂了"]]},"format":{"copied_from_pointer":{"id":"a0efaf5d-8c6d-4c27-9a7d-73637e903a6e","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732282967742,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"a0efaf5d-8c6d-4c27-9a7d-73637e903a6e","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-800d-bbc9-f25b2ca75edd":{"value":{"id":"14688756-3979-800d-bbc9-f25b2ca75edd","version":3,"type":"text","format":{"copied_from_pointer":{"id":"a0c3e746-1224-4ea0-8a67-821e09c179e5","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732281457731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"a0c3e746-1224-4ea0-8a67-821e09c179e5","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80d9-bb4e-cc6f1897872a":{"value":{"id":"14688756-3979-80d9-bb4e-cc6f1897872a","version":19,"type":"sub_header","properties":{"title":[["Ref"]]},"format":{"copied_from_pointer":{"id":"2984c820-aaef-4ca6-89e6-fadcc3c91081","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457716,"last_edited_time":1732281475778,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"2984c820-aaef-4ca6-89e6-fadcc3c91081","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8009-be36-f0d02b2506cf":{"value":{"id":"14688756-3979-8009-be36-f0d02b2506cf","version":36,"type":"bookmark","properties":{"link":[["https://mthli.xyz/coroutines-in-c/"]],"title":[["使用 C 语言实现协程"]],"description":[["本文译自 PuTTY 的作者 Simon Tatham 的文章 Coroutines in C，作者在文中介绍了一种基于 达夫设备 的思想实现的协程。注意， 斜体部分为翻译过程中的补充 。考虑到译者的英文水平有限，部分语句的翻译与原文略有出入，强烈建议读者结合原文观看。 编写大型程序总是一件困难的事。其中常见的一个问题就是：如果你有一段代码正在生产数据，同时有另一段代码正在消费这些数据，它俩之间谁应该是 caller（调用者）谁应该是 callee（被调用者）呢 （译者注，即如何维护它俩之间的调用关系） ？ 这里有一段非常简单的 decompressor 代码，以及一段非常简单的 parser 代码： 两段代码都非常简单易懂。前者通过调用 emit() 每次产生一个字符；后者通过调用 getchar() 每次消费一个字符。只需要调用 emit() 和 getchar() 就可以传送数据了，所以 decompressor 产生的数据可以很轻易地传送到 parser 中。 在很多现代操作系统中，你可以在两个进程或线程之间使用管道（pipe）传输数据。在 decompressor 的 emit() 向管道中写数据，在 parser 的 getchar() 从同一个管道中读数据。简单粗暴，同时也非常繁琐和浪费性能。尤其是在你不想因为要做类似的事就得把程序拆分为多线程时。 在本篇文章中，我为这类结构性问题提供一种极具创造性的解决方案。 一种常见的解决方案是重写通信渠道两端中的一端，使之成为一个可以被调用的函数。以下分别是 decompressor 和 parser"]]},"format":{"bookmark_icon":"https://mthli.xyz/favicon-32x32.png?v=f165042f9f334601a4ff4a1f1b0b0de2","bookmark_cover":"https://mthli.xyz/static/f165042f9f334601a4ff4a1f1b0b0de2/99438/profile-pic.jpg","copied_from_pointer":{"id":"b64a14d4-ece9-4f6d-99b4-1435c59e8877","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281263637,"last_edited_time":1732281599731,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"b64a14d4-ece9-4f6d-99b4-1435c59e8877","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8038-8653-c50b4c10dc7d":{"value":{"id":"14688756-3979-8038-8653-c50b4c10dc7d","version":3,"type":"bookmark","properties":{"link":[["https://www.bilibili.com/video/BV1dv4y127YT/"]],"title":[["【协程革命】实现篇！无栈协程 有手就行？！ 全程字幕_哔哩哔哩_bilibili"]],"description":[["理解协程的最好方式就是实现它！最近面试开始流行问协程了，请同学们注意进厂时机？？？, 视频播放量 21613、弹幕量 46、点赞数 802、投硬币枚数 623、收藏人数 1338、转发人数 103, 视频作者 等疾风, 作者简介 C++职业拧螺丝；博客 Codesire-deng.github.io，相关视频：通过画图说一下协程的三种实现方式，我一直以为研究生一觉睡到中午自然醒是一件很小众的事情，大形势正在回暖，未来3-5年普通程序员能赶上的IT红利风口有哪些？卷对方向才能逆天改命！【马士兵】，从零开始刷力扣学C++——第二题：两数相加，MFC感觉已经被QT淘汰差不多了，但还是有很多企业在用，一些招聘要求还是提到MFC，怎么看这件事。，接下来登场的是有着职业生涯幻想大赛、评委拷问大赛、大学生卷王吹牛大赛、ppt模板美化大赛的全国大学生职业生涯规划大赛，从零开始的操作系统(21)  实现简单的任务/协程调度器，不知道做什么项目自我提高， 来试试LLVM教程的编译器项目，Bjarne Stroustrup ：程序员需要学习的5种类型编程语言，研二/大三吃透C++大厂面试真题300问，7天学完，让你面试少走99%弯路！【存下吧，附精心整理的面试宝典，学完即可面试上岗】"]]},"format":{"bookmark_icon":"https://i2.hdslb.com/bfs/archive/4ded1ab2f83a0dbafb10a9824850716e7ebdc504.jpg@100w_100h_1c.png@57w_57h_1c.png","bookmark_cover":"https://i2.hdslb.com/bfs/archive/4ded1ab2f83a0dbafb10a9824850716e7ebdc504.jpg@100w_100h_1c.png","copied_from_pointer":{"id":"14688756-3979-804d-a7e6-d0f720b27b3b","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281604680,"last_edited_time":1732281604684,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"14688756-3979-804d-a7e6-d0f720b27b3b","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-8057-9f29-cec2e5e65e3f":{"value":{"id":"14688756-3979-8057-9f29-cec2e5e65e3f","version":20,"type":"bookmark","properties":{"link":[["https://zhuanlan.zhihu.com/p/330606651"]],"title":[["有栈协程与无栈协程"]],"description":[["如今协程已经成为大多数语言的标配，例如 Golang 里的 goroutine，JavaScript 里的 async/await。尽管名称可能不同，但它们都可以被划分为两大类，一类是有栈（stackful）协程，例如 goroutine；一类是无栈（stackless）协程，例如 async/await。 此处「有栈」和「无栈」的含义不是指协程在运行时是否需要栈，对于大多数语言来说，一个函数调用另一个函数，总是存在调用栈的；而是指协程是否可以在其 任意 嵌套函数中被挂起，此处的嵌套函数读者可以理解为子函数、匿名函数等。显然有栈协程是可以的，而无栈协程则不可以。似乎难以理解？不要慌，让我们先从函数调用栈开始讲起。 注意，文中所有讨论均基于 x86 平台，在 x86 平台中，调用栈的地址增长方向是从高位向低位增长的。并且本文选取 32 位系统作为讨论对象，因为 16 位已经过时了；而 64 位又稍显复杂，所占篇幅较大，但读者可以轻易地将本文内容推演至 64 位。 首先我们需要明确的是，调用栈是一段连续的地址空间，无论是 caller（调用方）还是 callee（被调用方）都位于这段空间之内。而调用栈中一个函数所占用的地址空间我们称之为「栈帧」（stack frame），调用栈便是由若干个栈帧拼接而成的。一个典型的调用栈模型如下图所示，图片来自 维基百科 ： 图中涉及到几个关键点，Stack Pointer 即栈顶指针，总是指向调用栈的顶部地址，该地址由 esp 寄存器存储；Frame Pointer 即基址指针，总是指向当前栈帧（当前正在运行的子函数）的底部地址，该地址由 ebp 寄存器存储。Return Address 则在是 callee 返回后，caller 将继续执行的指令所在的地址；而指令地址是由 eip 寄存器负责读取的，且 eip 寄存器总是预先读取了 当前栈帧中 下一条将要执行的指令的地址。"]]},"format":{"bookmark_icon":"https://static.zhihu.com/heifetz/favicon.ico","bookmark_cover":"https://pic4.zhimg.com/v2-ec808978c0bf85a74c055564b072097b_b.jpg","copied_from_pointer":{"id":"f508e1af-8bc9-464a-84b1-d4456ceddf97","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457711,"last_edited_time":1732281592583,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"f508e1af-8bc9-464a-84b1-d4456ceddf97","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-806a-9d97-ee6af88af9cc":{"value":{"id":"14688756-3979-806a-9d97-ee6af88af9cc","version":11,"type":"bookmark","properties":{"link":[["https://www.zhihu.com/question/50185085/answer/1342613525"]],"title":[["出于什么样的原因，诞生了「协程」这一概念？"]],"description":[["其实从处理器的角度看协程更符合直觉，一个处理器核心本来就没法同时处理两件事情，要同时进行多件事情本来就需要正在运行的让出处理器，然后才能去处理另一件事情。只不过这个让出的过程是线程调度器主动抢占的。 所以线程调度器是假定不同的线程是毫无关系的，所以它平均的分配时间片让处理器雨露均沾。 ..."]]},"format":{"bookmark_icon":"https://static.zhihu.com/heifetz/favicon.ico","bookmark_cover":"https://picx.zhimg.com/23a5bca736788ab73e3bd58e56761cda_l.jpg?source=1940ef5c","copied_from_pointer":{"id":"d724c39b-2712-4ffd-b054-f830cee0bc6f","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281498926,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"d724c39b-2712-4ffd-b054-f830cee0bc6f","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-809c-add4-c292aedb0d04":{"value":{"id":"14688756-3979-809c-add4-c292aedb0d04","version":11,"type":"bookmark","properties":{"link":[["https://zhuanlan.zhihu.com/p/80037638"]],"title":[["协程究竟比线程能省多少开销？"]],"description":[["前文《进程/线程上下文切换会用掉你多少CPU？》 中中我们用实验的方式验证了Linux进程和线程的上下文切换开销，大约是3-5us之间。这个开销确实不算大，但是海量互联网服务端和一般的计算机程序相比，特点是： 高并发：每秒钟需要处理成千上万的用户请求 周期短：每个用户处理耗时越短越好，经常是ms级别的 高网络IO：经常需要从其它机器上进行网络IO、如Redis、Mysql等等 ..."]]},"format":{"bookmark_icon":"https://static.zhihu.com/heifetz/favicon.ico","bookmark_cover":"https://pic1.zhimg.com/v2-dd5f446902a1118de55549d824c0bd01_xs.jpg?source=172ae18b","copied_from_pointer":{"id":"96b27c6e-8d5e-4adc-84f7-343976a27e50","table":"block","spaceId":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"}},"created_time":1732281457712,"last_edited_time":1732281502749,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"copied_from":"96b27c6e-8d5e-4adc-84f7-343976a27e50","space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80de-93f3-c8da4704bb58":{"value":{"id":"14688756-3979-80de-93f3-c8da4704bb58","version":3,"type":"text","created_time":1732284824764,"last_edited_time":1732284824765,"parent_id":"14688756-3979-806c-af3c-f23f4c85d88e","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"}},"collection":{"0bb2e606-8d0c-4f7c-aca9-70986e90c055":{"value":{"id":"0bb2e606-8d0c-4f7c-aca9-70986e90c055","version":83,"name":[["x³u³"]],"description":[["🗒 碎碎念"]],"schema":{"@NcA":{"name":"password","type":"text"},"Dj]h":{"name":"icon","type":"text"},"NX\\Q":{"name":"date","type":"date","date_format":"YYYY/MM/DD"},"`gQ~":{"name":"type","type":"select","options":[{"id":"5aff2f95-fd1e-489b-8840-bf10bc9519cb","color":"purple","value":"Post","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"374d2bc6-a144-4832-8ca4-474aaae0ea1f","color":"orange","value":"Page","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"95b7fea5-98b3-476e-892f-79e8f36d0633","color":"brown","value":"Notice","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"2287395b-9f64-4852-b46f-ff3df4b4acef","color":"yellow","value":"Menu","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"50fefd65-c28e-4806-9183-aa12995f11f3","color":"pink","value":"SubMenu","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"b945f57d-dbcc-4603-9fab-5cfe447aad1b","color":"red","value":"Config","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]}]},"bB{M":{"name":"category","type":"select"},"d]hq":{"name":"slug","type":"text"},"sD^m":{"name":"tags","type":"multi_select","options":[{"id":"a027d99d-be10-412d-b94a-8c61f6eacc29","color":"default","value":"存储","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"4bd9608a-d7d6-4597-beb7-d4849da04909","color":"gray","value":"分布式系统","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"ad04c718-fd54-4374-bfed-6c7e9dc65e01","color":"blue","value":"折腾","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"25bff120-77fb-40f1-9531-00997afcb444","color":"purple","value":"Linux","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"e12d005d-ec78-4876-950d-2399744abbaa","color":"blue","value":"内核","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"c7950cbd-8d2c-4cbe-8bb1-679fb433a74f","color":"red","value":"碎碎念","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"be9970b9-6fe4-4351-92c2-1e3e41d2a3e3","color":"brown","value":"Cloud Native","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"61c97435-c65a-40b1-9e95-2c6345b6f9d3","color":"pink","value":"Vim","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"d18e22d6-cbbb-4311-9928-7c5b58124456","color":"orange","value":"论文阅读","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"526115da-04f3-4be2-8a47-c83c7576b0de","color":"green","value":"Kubernetes","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"12016016-3ecc-4ee7-92c6-6973678fdd05","color":"yellow","value":"数据库","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"1edc83b3-f351-4a21-aafc-3b059d0c0f22","color":"brown","value":"Raft","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"158014da-08eb-49f4-97ad-1ce6f6e0ee5c","color":"orange","value":"Rust","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"e93f6dd2-caed-4531-9ee1-28fc2cbf1811","color":"yellow","value":"旅行","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"c885be61-3b71-4d5f-86cc-4da1586e660a","color":"blue","value":"PVE","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"d4f1c8d8-1d0f-47af-a440-4dc14b658610","color":"blue","value":"日语","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"be95bbc7-1806-4b7e-8b58-1f540ac0f223","color":"red","value":"网络","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"9bb01875-d8ae-4914-a41b-5eccd75e824f","color":"blue","value":"操作系统","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]}]},"wz|S":{"name":"summary","type":"text"},"title":{"name":"title","type":"title"},"f211bdc0-ee00-4186-9a7d-f68c055ec2ee":{"name":"status","type":"select","options":[{"id":"7abc61d4-b405-480d-b699-12588755fa65","color":"red","value":"Published","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"d1242312-e0a8-456d-b8f0-6e998e2c4fb2","color":"orange","value":"Invisible","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]},{"id":"41d5f5c6-b53c-42bc-8e0f-fc9402048480","color":"yellow","value":"Draft","collectionIds":["0bb2e606-8d0c-4f7c-aca9-70986e90c055"]}]}},"icon":"https://prod-files-secure.s3.us-west-2.amazonaws.com/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/49b4570c-b2f0-457b-81b7-b68e2693a471/avatar.png","cover":"https://prod-files-secure.s3.us-west-2.amazonaws.com/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/a9af1d6b-f284-4734-ba06-990353cf3f84/Elaina.jpg","format":{"copied_from_pointer":{"id":"4379bc14-5d22-453b-a153-12639616fc01","table":"collection","spaceId":"6c096b44-beb9-48ee-8f92-1efdde47f3a3"},"property_visibility":[{"property":"`gQ~","visibility":"show"},{"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee","visibility":"show"},{"property":"NX\\Q","visibility":"show"},{"property":"d]hq","visibility":"show"},{"property":"wz|S","visibility":"show"},{"property":"sD^m","visibility":"show"},{"property":"bB{M","visibility":"show"},{"property":"Dj]h","visibility":"hide_if_empty"},{"property":"uHoD","visibility":"show"},{"property":"kiCR","visibility":"hide"}],"ai_suggested_properties":[{"name":"created by","type":"person"},{"name":"updated at","type":"date"},{"name":"priority","type":"select","options":[{"id":"OqCJ","color":"purple","value":"low"},{"id":"X{Pz","color":"pink","value":"medium"},{"id":"LRCx","color":"red","value":"high"},{"id":"VY?=","color":"yellow","value":"urgent"}]},{"name":"visibility","type":"select","options":[{"id":"Q=_{","color":"red","value":"public"},{"id":"A|Nj","color":"green","value":"private"},{"id":"MWlx","color":"gray","value":"restricted"}]},{"name":"attachments","type":"file"},{"name":"related links","type":"multi_select","options":[{"id":"I^W>","color":"default","value":"documentation"},{"id":"<g\\P","color":"yellow","value":"tutorials"},{"id":"RMVI","color":"gray","value":"references"}]},{"name":"estimated completion","type":"date"},{"name":"contact email","type":"email"},{"name":"contact phone","type":"phone_number"},{"name":"is active","type":"checkbox"}],"collection_cover_position":0.6486,"collection_page_properties":[{"visible":false,"property":"`gQ~"},{"visible":false,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"visible":false,"property":"NX\\Q"},{"visible":false,"property":"d]hq"},{"visible":false,"property":"wz|S"},{"visible":false,"property":"sD^m"},{"visible":true,"property":"bB{M"},{"visible":true,"property":"Dj]h"},{"visible":true,"property":"@NcA"},{"visible":true,"property":"ckw_"}],"collection_default_template":{"template_page_id":"2eace25c-842c-46fd-9ccb-e9190981b6c3"}},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"file_ids":["6cf3dc36-2f98-4f0e-9679-1bdbb1485129","5520bd92-e709-4c0d-ad58-06923f23f7e9","624d393a-62e3-4464-a1bf-1c79ecd4fbda","d52f6766-3e32-4c3d-8529-46e1f214360f","abe3a0aa-2aff-4274-81bb-c2443d4ef9e2","a2a32795-101d-46aa-a7f6-eb35b8750166","29db38d2-d5fa-4fa6-8a92-3b527cfe80d1","49b4570c-b2f0-457b-81b7-b68e2693a471","a9af1d6b-f284-4734-ba06-990353cf3f84"],"copied_from":"4379bc14-5d22-453b-a153-12639616fc01","template_pages":["2eace25c-842c-46fd-9ccb-e9190981b6c3"],"migrated":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"}},"space":{"4cc04375-345a-4a1e-bdf0-3a7c88ef0425":{"role":"none"}},"collection_view":{"2efe7048-0d5f-4e04-8b4e-2a3793ad6aef":{"value":{"id":"2efe7048-0d5f-4e04-8b4e-2a3793ad6aef","version":107,"type":"table","name":"All","format":{"table_wrap":false,"show_page_icon":true,"property_filters":[{"id":"860c7b26-627e-4972-b471-8e8bfca0d897","filter":{"filter":{"value":{"type":"exact"},"operator":"enum_is"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"}},{"id":"1c5b2709-6f35-4692-b4db-cb219a62e22d","filter":{"filter":{"value":{"type":"exact"},"operator":"enum_is"},"property":"`gQ~"}}],"table_properties":[{"wrap":false,"width":100,"visible":true,"property":"`gQ~"},{"wrap":false,"width":263,"visible":true,"property":"title"},{"wrap":false,"width":233,"visible":true,"property":"wz|S"},{"wrap":false,"width":100,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"wrap":false,"width":219,"visible":true,"property":"sD^m"},{"wrap":false,"width":184,"visible":true,"property":"d]hq"},{"wrap":false,"width":111,"visible":true,"property":"NX\\Q"},{"wrap":false,"width":100,"visible":false,"property":"bB{M"},{"wrap":false,"width":117,"visible":false,"property":"Dj]h"},{"wrap":false,"width":100,"visible":false,"property":"@NcA"}],"table_frozen_column_index":-1,"collection_view_default_template":{"template_page_id":"2eace25c-842c-46fd-9ccb-e9190981b6c3"}},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"page_sort":["cc459e5b-0f15-4a0c-83db-bb6bf2001aa3","a9bfecc8-9761-4987-9aca-af79d4ebbd0c","7aa40ad8-1e69-4d56-b245-d135d3101cec","e4eefa7d-e2f2-44ed-83f6-fd6951d50900","0f9b7a0d-ad15-4ece-8a8b-948d96b50ff7","58a216ce-4d8d-4b60-906c-6097c5fd8d41","b824f35b-aee9-4a22-81c9-d44b65f99f43","ba565c08-0d2f-46cb-9fcb-5eeface44dfb","560c76dd-c69f-429b-827d-7974407bb23f","0533a861-81cc-40fa-8ab8-5be721800b86","3578fa31-ea0a-4e07-82dc-28704e0dc685","f2625c60-ca69-493b-858c-bf38979f468c","96b14e20-e592-42f6-b7d2-357f4693f18c","fe8fafec-6d1b-4fbb-8a7a-fb079a6bb8e4","9345db3a-b8bd-4e02-b296-9734958eddb6","26e8ddc4-10b4-4765-a96d-e87290556164","840f0871-b58b-428d-8a28-0861947974b4","5787bc4f-06a4-4158-a27f-6c81fb9b1efe","e1bff221-486f-42c8-9cf3-6379f83f3510","2db01777-47d0-4230-bbe8-ef65ab694707","ab0d5acb-9230-4656-9c49-1aff13aba865","98330ff5-71d2-4ea9-945a-ba76fc282e9d","71439e60-5784-4dc5-b71f-e4cd7b0c4304","bfe53f5c-d4bd-4df7-a071-84db62310ad2","0606268b-9014-490d-b84d-d41d4be8df11","c09a05a2-6ab7-41e1-b23c-9e442cd61f6e","13a88756-3979-80cb-a5e6-fd37fcff6613","8bc2fda4-9fb5-4a89-95b8-c8c175e462c2","459c966a-bb34-47d2-ba4c-b1f0509ab033","022b3625-9f9f-42e0-a8a4-64bae1929d2f","d1a9da33-04a6-4f8b-8458-83aabde787be","40557fff-8f06-4643-be33-a0aab52b28be","b1c009da-991f-4449-b945-6bc4584cca98","fee7a505-5f8e-4186-9b2d-4c80ebee5077","df084444-e2d8-412a-bd56-c6b2c1046d5d","10d88756-3979-807a-bc25-cf64eed2ccce","14088756-3979-8047-9d4d-c9c8e2152b95","15c88756-3979-8089-acb1-e4ae25bf3f4f","14688756-3979-80f8-8f88-d0bb8697b4a4","14688756-3979-806c-af3c-f23f4c85d88e","12988756-3979-8065-aeb4-e6ec1258ed90","94e03781-e74c-41d0-89f7-df2e2a7ad93f","11688756-3979-8028-b7d8-ce8bf2ec4253","11d88756-3979-8080-877d-cf9a2d058532","4e5d7fc0-68d5-4165-ba12-b2d8bfc7d92c","5b4b2d85-43c0-4edb-ad2d-0f14d79b4c4b","a06c26b2-5941-43ea-a89e-d0bebab47add","bde25ba8-2381-4da6-bb5e-5787ace45def","0e96a78e-dec9-4620-b0e8-a2b889017cb7","832b2511-aada-4c80-903c-1aadd7db46ce","2672b128-6cb0-4b3a-b54b-6b356a4ffbdd","634565f7-7a6e-4c4e-ac58-77b12c21f7ab","6e0bb534-679f-424e-80b3-e9bee483b7e8","da88c0a2-fce1-4336-97e7-61bc4149027a","0ee52933-5891-4387-a10c-921468884ab4","f086cce1-bf32-4be2-9fab-8529a2186ba3","e50dd6f9-49d4-4c3a-b723-da54361b34d5","3f554fe3-c9cb-4f63-99b2-f90f395308f6","eaf25f44-f59e-48d1-b475-a28066593688","af6f6570-0d18-4c3d-9145-3ee677a60c35","4c1d6186-e507-4ca2-9c02-d32dfbe2cca5","ff668a4c-0b15-45ec-9716-42f1af578ece","ce720858-10b7-4c0c-8083-906f29150a81","9ee7cbfe-3f95-4fc7-aab6-0d03c30a1e1b","3a554c07-e77f-43fa-ba66-ff39cf1e0ca5","4194acae-3f4b-4c08-98b9-907a0b5bd4b9","ce969492-bca9-4a45-8730-9ae753bdd027","368e5462-3dca-4c8b-ab1f-595cb04c56e0","d26ce18a-fa8d-4df4-8b82-69c419c5b621","3327d648-8e54-4edf-a38e-a9cba8884a1a","d5fd419b-4cb7-44c8-a8d7-0c8ed44c1963","deaccfa2-4562-437c-874e-fc5041f3fad5","f26f0a34-d6f1-419a-b91b-e0ea3639fe4b","a23d61e0-cc90-4068-bfb0-986afaf60ac5","cc463e20-63ea-4132-acea-84fc7307dde8","1eecd7c4-1e60-4aff-adbf-ccc85f820ef2","514ae2e3-a0d5-414c-86e5-ed5f8a9eb9c8","7b0eb02d-8b44-45f3-b593-52c0a62f4595","37c4cfd9-62a3-41bb-9989-f9df38c45d04","8aa3f594-ff5d-4f99-b0a2-fa09bb32ba84","806f9f46-c738-4c87-9957-e73d11ec44bd","64ac0e55-b2ae-4c80-8226-7a1f4b4ed8da","4d7cb2a6-768c-42c7-aad0-8e56168076d5","1e5f4845-8e82-4ab1-aad9-0d4c9eed2fde","37e5fc82-97ee-4a59-9d0b-1f44e2977cc9","1ccc4db8-78ca-45b9-947b-5d216a3e0667","f3550fb0-346c-4212-b57f-86433738b50b","7d2888d0-b55f-4909-97bf-944e56f19c0e","d9436315-195f-458c-93ac-09e5b8780171","51b42828-cae5-456b-9c2f-9b4b2232380e","280fbd32-0621-4ccb-babb-5790a693090e","1ffb90ba-821d-4d16-8520-e46604a470d7","adc7c47b-6dd7-439f-9e06-6075256c91a7","d6ba00e3-fb3f-4f30-9fa7-23c0b0712cdd","2eb83ae6-642d-45a1-a8a4-04463c20dc4b","c248bc92-b7a1-4f5b-a0a9-f1d5186a8dae","9900ca48-1c4f-44e3-9dae-ab5bd1633d6c","f9e566d7-45f7-4335-afe7-506247cd0b8e","a0b1590c-24bd-41dd-a6e0-b3cdac7bb4e6","8c6e229b-cbd3-4dc6-9b49-34f701a8aead","1467d162-f107-4606-b5dc-ec538ede0fdd","09bb7c8f-a916-4a39-bd01-2786a14bacc4","9e017f37-5917-4cda-afb8-92072abdbdba","8aafeb2c-85b4-4c4e-af36-3b9efacb167c","6d0e0705-57f3-4223-8745-a27295245029","dec89a30-7004-499f-a99e-05b2842cad2b","7efc83d4-2645-4578-b588-a9cffb15524a","1769e8de-bebe-4687-a28a-34c15859ed98","203f2c30-a3cd-4f70-95b3-07df9f996428","2a0b435c-6f77-4db8-be6b-831d177bd762","eac01009-c323-46fd-8339-09c282e6597e","c4b37f96-4ab0-4a0b-a16e-55bac3e32990","4ad5c69e-0dab-4d66-b548-360da7d53568","72d89744-ac04-4dd4-be8b-9d629acd7c11","32dc3358-e954-4934-9e71-cf1dfbca5b91","961e45bd-8bed-4ebc-b3d8-1f0e63736d04"],"query2":{"aggregations":[{"property":"title","aggregator":"count"}]},"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14688756-3979-80e7-97c9-000c212f8370":{"value":{"id":"14688756-3979-80e7-97c9-000c212f8370","version":3,"type":"table","name":"Published Post","format":{"table_wrap":false,"show_page_icon":true,"property_filters":[{"id":"1c5b2709-6f35-4692-b4db-cb219a62e22d","filter":{"filter":{"value":{"type":"exact","value":"Post"},"operator":"enum_is"},"property":"`gQ~"}},{"id":"860c7b26-627e-4972-b471-8e8bfca0d897","filter":{"filter":{"value":{"type":"exact","value":"Published"},"operator":"enum_is"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"}}],"table_properties":[{"wrap":false,"width":100,"visible":true,"property":"`gQ~"},{"wrap":false,"width":263,"visible":true,"property":"title"},{"wrap":false,"width":233,"visible":true,"property":"wz|S"},{"wrap":false,"width":100,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"wrap":false,"width":219,"visible":true,"property":"sD^m"},{"wrap":false,"width":184,"visible":true,"property":"d]hq"},{"wrap":false,"width":111,"visible":true,"property":"NX\\Q"},{"wrap":false,"width":100,"visible":false,"property":"bB{M"},{"wrap":false,"width":117,"visible":false,"property":"Dj]h"},{"wrap":false,"width":100,"visible":false,"property":"@NcA"}],"table_frozen_column_index":-1,"collection_view_default_template":{"template_page_id":"2eace25c-842c-46fd-9ccb-e9190981b6c3"}},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"page_sort":["cc459e5b-0f15-4a0c-83db-bb6bf2001aa3","a9bfecc8-9761-4987-9aca-af79d4ebbd0c","7aa40ad8-1e69-4d56-b245-d135d3101cec","e4eefa7d-e2f2-44ed-83f6-fd6951d50900","0f9b7a0d-ad15-4ece-8a8b-948d96b50ff7","58a216ce-4d8d-4b60-906c-6097c5fd8d41","b824f35b-aee9-4a22-81c9-d44b65f99f43","ba565c08-0d2f-46cb-9fcb-5eeface44dfb","560c76dd-c69f-429b-827d-7974407bb23f","0533a861-81cc-40fa-8ab8-5be721800b86","3578fa31-ea0a-4e07-82dc-28704e0dc685","f2625c60-ca69-493b-858c-bf38979f468c","96b14e20-e592-42f6-b7d2-357f4693f18c","fe8fafec-6d1b-4fbb-8a7a-fb079a6bb8e4","9345db3a-b8bd-4e02-b296-9734958eddb6","26e8ddc4-10b4-4765-a96d-e87290556164","840f0871-b58b-428d-8a28-0861947974b4","5787bc4f-06a4-4158-a27f-6c81fb9b1efe","e1bff221-486f-42c8-9cf3-6379f83f3510","2db01777-47d0-4230-bbe8-ef65ab694707","ab0d5acb-9230-4656-9c49-1aff13aba865","98330ff5-71d2-4ea9-945a-ba76fc282e9d","71439e60-5784-4dc5-b71f-e4cd7b0c4304","bfe53f5c-d4bd-4df7-a071-84db62310ad2","0606268b-9014-490d-b84d-d41d4be8df11","c09a05a2-6ab7-41e1-b23c-9e442cd61f6e","13a88756-3979-80cb-a5e6-fd37fcff6613","8bc2fda4-9fb5-4a89-95b8-c8c175e462c2","459c966a-bb34-47d2-ba4c-b1f0509ab033","022b3625-9f9f-42e0-a8a4-64bae1929d2f","d1a9da33-04a6-4f8b-8458-83aabde787be","40557fff-8f06-4643-be33-a0aab52b28be","b1c009da-991f-4449-b945-6bc4584cca98","fee7a505-5f8e-4186-9b2d-4c80ebee5077","df084444-e2d8-412a-bd56-c6b2c1046d5d","10d88756-3979-807a-bc25-cf64eed2ccce","14088756-3979-8047-9d4d-c9c8e2152b95","14688756-3979-806c-af3c-f23f4c85d88e","12988756-3979-8065-aeb4-e6ec1258ed90","94e03781-e74c-41d0-89f7-df2e2a7ad93f","11688756-3979-8028-b7d8-ce8bf2ec4253","11d88756-3979-8080-877d-cf9a2d058532","4e5d7fc0-68d5-4165-ba12-b2d8bfc7d92c","5b4b2d85-43c0-4edb-ad2d-0f14d79b4c4b","a06c26b2-5941-43ea-a89e-d0bebab47add","bde25ba8-2381-4da6-bb5e-5787ace45def","0e96a78e-dec9-4620-b0e8-a2b889017cb7","832b2511-aada-4c80-903c-1aadd7db46ce","2672b128-6cb0-4b3a-b54b-6b356a4ffbdd","634565f7-7a6e-4c4e-ac58-77b12c21f7ab","6e0bb534-679f-424e-80b3-e9bee483b7e8","da88c0a2-fce1-4336-97e7-61bc4149027a","0ee52933-5891-4387-a10c-921468884ab4","f086cce1-bf32-4be2-9fab-8529a2186ba3","e50dd6f9-49d4-4c3a-b723-da54361b34d5","3f554fe3-c9cb-4f63-99b2-f90f395308f6","eaf25f44-f59e-48d1-b475-a28066593688","af6f6570-0d18-4c3d-9145-3ee677a60c35","4c1d6186-e507-4ca2-9c02-d32dfbe2cca5","ff668a4c-0b15-45ec-9716-42f1af578ece","ce720858-10b7-4c0c-8083-906f29150a81","9ee7cbfe-3f95-4fc7-aab6-0d03c30a1e1b","3a554c07-e77f-43fa-ba66-ff39cf1e0ca5","4194acae-3f4b-4c08-98b9-907a0b5bd4b9","ce969492-bca9-4a45-8730-9ae753bdd027","368e5462-3dca-4c8b-ab1f-595cb04c56e0","d26ce18a-fa8d-4df4-8b82-69c419c5b621","3327d648-8e54-4edf-a38e-a9cba8884a1a","d5fd419b-4cb7-44c8-a8d7-0c8ed44c1963","deaccfa2-4562-437c-874e-fc5041f3fad5","f26f0a34-d6f1-419a-b91b-e0ea3639fe4b","a23d61e0-cc90-4068-bfb0-986afaf60ac5","cc463e20-63ea-4132-acea-84fc7307dde8","1eecd7c4-1e60-4aff-adbf-ccc85f820ef2","514ae2e3-a0d5-414c-86e5-ed5f8a9eb9c8","7b0eb02d-8b44-45f3-b593-52c0a62f4595","37c4cfd9-62a3-41bb-9989-f9df38c45d04","8aa3f594-ff5d-4f99-b0a2-fa09bb32ba84","806f9f46-c738-4c87-9957-e73d11ec44bd","64ac0e55-b2ae-4c80-8226-7a1f4b4ed8da","4d7cb2a6-768c-42c7-aad0-8e56168076d5","1e5f4845-8e82-4ab1-aad9-0d4c9eed2fde","37e5fc82-97ee-4a59-9d0b-1f44e2977cc9","1ccc4db8-78ca-45b9-947b-5d216a3e0667","f3550fb0-346c-4212-b57f-86433738b50b","7d2888d0-b55f-4909-97bf-944e56f19c0e","d9436315-195f-458c-93ac-09e5b8780171","51b42828-cae5-456b-9c2f-9b4b2232380e","280fbd32-0621-4ccb-babb-5790a693090e","1ffb90ba-821d-4d16-8520-e46604a470d7","adc7c47b-6dd7-439f-9e06-6075256c91a7","d6ba00e3-fb3f-4f30-9fa7-23c0b0712cdd","2eb83ae6-642d-45a1-a8a4-04463c20dc4b","c248bc92-b7a1-4f5b-a0a9-f1d5186a8dae","9900ca48-1c4f-44e3-9dae-ab5bd1633d6c","f9e566d7-45f7-4335-afe7-506247cd0b8e","a0b1590c-24bd-41dd-a6e0-b3cdac7bb4e6","8c6e229b-cbd3-4dc6-9b49-34f701a8aead","1467d162-f107-4606-b5dc-ec538ede0fdd","09bb7c8f-a916-4a39-bd01-2786a14bacc4","9e017f37-5917-4cda-afb8-92072abdbdba","8aafeb2c-85b4-4c4e-af36-3b9efacb167c","6d0e0705-57f3-4223-8745-a27295245029","dec89a30-7004-499f-a99e-05b2842cad2b","7efc83d4-2645-4578-b588-a9cffb15524a","1769e8de-bebe-4687-a28a-34c15859ed98","203f2c30-a3cd-4f70-95b3-07df9f996428","2a0b435c-6f77-4db8-be6b-831d177bd762","eac01009-c323-46fd-8339-09c282e6597e","c4b37f96-4ab0-4a0b-a16e-55bac3e32990","4ad5c69e-0dab-4d66-b548-360da7d53568","72d89744-ac04-4dd4-be8b-9d629acd7c11","32dc3358-e954-4934-9e71-cf1dfbca5b91","961e45bd-8bed-4ebc-b3d8-1f0e63736d04"],"query2":{"sort":[{"property":"NX\\Q","direction":"descending"}],"aggregations":[{"property":"title","aggregator":"count"}]},"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"14588756-3979-8039-9990-000cefddccf8":{"value":{"id":"14588756-3979-8039-9990-000cefddccf8","version":11,"type":"table","name":"All Post","format":{"table_wrap":false,"show_page_icon":true,"property_filters":[{"id":"eacd5736-8f45-4d4d-97ce-21001f75dceb","filter":{"filter":{"value":{"type":"exact","value":"Post"},"operator":"enum_is"},"property":"`gQ~"}}],"table_properties":[{"wrap":false,"width":100,"visible":true,"property":"`gQ~"},{"wrap":false,"width":263,"visible":true,"property":"title"},{"wrap":false,"width":233,"visible":true,"property":"wz|S"},{"wrap":false,"width":100,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"wrap":false,"width":219,"visible":true,"property":"sD^m"},{"wrap":false,"width":184,"visible":true,"property":"d]hq"},{"wrap":false,"width":111,"visible":true,"property":"NX\\Q"},{"wrap":false,"width":100,"visible":false,"property":"bB{M"},{"wrap":false,"width":117,"visible":false,"property":"Dj]h"},{"wrap":false,"width":100,"visible":false,"property":"@NcA"}],"table_frozen_column_index":-1,"collection_view_default_template":{"template_page_id":"2eace25c-842c-46fd-9ccb-e9190981b6c3"}},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"page_sort":["cc459e5b-0f15-4a0c-83db-bb6bf2001aa3","a9bfecc8-9761-4987-9aca-af79d4ebbd0c","7aa40ad8-1e69-4d56-b245-d135d3101cec","e4eefa7d-e2f2-44ed-83f6-fd6951d50900","0f9b7a0d-ad15-4ece-8a8b-948d96b50ff7","58a216ce-4d8d-4b60-906c-6097c5fd8d41","b824f35b-aee9-4a22-81c9-d44b65f99f43","ba565c08-0d2f-46cb-9fcb-5eeface44dfb","560c76dd-c69f-429b-827d-7974407bb23f","0533a861-81cc-40fa-8ab8-5be721800b86","3578fa31-ea0a-4e07-82dc-28704e0dc685","f2625c60-ca69-493b-858c-bf38979f468c","96b14e20-e592-42f6-b7d2-357f4693f18c","fe8fafec-6d1b-4fbb-8a7a-fb079a6bb8e4","9345db3a-b8bd-4e02-b296-9734958eddb6","26e8ddc4-10b4-4765-a96d-e87290556164","840f0871-b58b-428d-8a28-0861947974b4","5787bc4f-06a4-4158-a27f-6c81fb9b1efe","e1bff221-486f-42c8-9cf3-6379f83f3510","2db01777-47d0-4230-bbe8-ef65ab694707","ab0d5acb-9230-4656-9c49-1aff13aba865","98330ff5-71d2-4ea9-945a-ba76fc282e9d","71439e60-5784-4dc5-b71f-e4cd7b0c4304","bfe53f5c-d4bd-4df7-a071-84db62310ad2","0606268b-9014-490d-b84d-d41d4be8df11","c09a05a2-6ab7-41e1-b23c-9e442cd61f6e","13a88756-3979-80cb-a5e6-fd37fcff6613","8bc2fda4-9fb5-4a89-95b8-c8c175e462c2","459c966a-bb34-47d2-ba4c-b1f0509ab033","022b3625-9f9f-42e0-a8a4-64bae1929d2f","d1a9da33-04a6-4f8b-8458-83aabde787be","40557fff-8f06-4643-be33-a0aab52b28be","b1c009da-991f-4449-b945-6bc4584cca98","fee7a505-5f8e-4186-9b2d-4c80ebee5077","df084444-e2d8-412a-bd56-c6b2c1046d5d","10d88756-3979-807a-bc25-cf64eed2ccce","14088756-3979-8047-9d4d-c9c8e2152b95","14688756-3979-80f8-8f88-d0bb8697b4a4","14688756-3979-806c-af3c-f23f4c85d88e","12988756-3979-8065-aeb4-e6ec1258ed90","94e03781-e74c-41d0-89f7-df2e2a7ad93f","11688756-3979-8028-b7d8-ce8bf2ec4253","11d88756-3979-8080-877d-cf9a2d058532","4e5d7fc0-68d5-4165-ba12-b2d8bfc7d92c","5b4b2d85-43c0-4edb-ad2d-0f14d79b4c4b","a06c26b2-5941-43ea-a89e-d0bebab47add","bde25ba8-2381-4da6-bb5e-5787ace45def","0e96a78e-dec9-4620-b0e8-a2b889017cb7","832b2511-aada-4c80-903c-1aadd7db46ce","2672b128-6cb0-4b3a-b54b-6b356a4ffbdd","634565f7-7a6e-4c4e-ac58-77b12c21f7ab","6e0bb534-679f-424e-80b3-e9bee483b7e8","da88c0a2-fce1-4336-97e7-61bc4149027a","0ee52933-5891-4387-a10c-921468884ab4","f086cce1-bf32-4be2-9fab-8529a2186ba3","e50dd6f9-49d4-4c3a-b723-da54361b34d5","3f554fe3-c9cb-4f63-99b2-f90f395308f6","eaf25f44-f59e-48d1-b475-a28066593688","af6f6570-0d18-4c3d-9145-3ee677a60c35","4c1d6186-e507-4ca2-9c02-d32dfbe2cca5","ff668a4c-0b15-45ec-9716-42f1af578ece","ce720858-10b7-4c0c-8083-906f29150a81","9ee7cbfe-3f95-4fc7-aab6-0d03c30a1e1b","3a554c07-e77f-43fa-ba66-ff39cf1e0ca5","4194acae-3f4b-4c08-98b9-907a0b5bd4b9","ce969492-bca9-4a45-8730-9ae753bdd027","368e5462-3dca-4c8b-ab1f-595cb04c56e0","d26ce18a-fa8d-4df4-8b82-69c419c5b621","3327d648-8e54-4edf-a38e-a9cba8884a1a","d5fd419b-4cb7-44c8-a8d7-0c8ed44c1963","deaccfa2-4562-437c-874e-fc5041f3fad5","f26f0a34-d6f1-419a-b91b-e0ea3639fe4b","a23d61e0-cc90-4068-bfb0-986afaf60ac5","cc463e20-63ea-4132-acea-84fc7307dde8","1eecd7c4-1e60-4aff-adbf-ccc85f820ef2","514ae2e3-a0d5-414c-86e5-ed5f8a9eb9c8","7b0eb02d-8b44-45f3-b593-52c0a62f4595","37c4cfd9-62a3-41bb-9989-f9df38c45d04","8aa3f594-ff5d-4f99-b0a2-fa09bb32ba84","806f9f46-c738-4c87-9957-e73d11ec44bd","64ac0e55-b2ae-4c80-8226-7a1f4b4ed8da","4d7cb2a6-768c-42c7-aad0-8e56168076d5","1e5f4845-8e82-4ab1-aad9-0d4c9eed2fde","37e5fc82-97ee-4a59-9d0b-1f44e2977cc9","1ccc4db8-78ca-45b9-947b-5d216a3e0667","f3550fb0-346c-4212-b57f-86433738b50b","7d2888d0-b55f-4909-97bf-944e56f19c0e","d9436315-195f-458c-93ac-09e5b8780171","51b42828-cae5-456b-9c2f-9b4b2232380e","280fbd32-0621-4ccb-babb-5790a693090e","1ffb90ba-821d-4d16-8520-e46604a470d7","adc7c47b-6dd7-439f-9e06-6075256c91a7","d6ba00e3-fb3f-4f30-9fa7-23c0b0712cdd","2eb83ae6-642d-45a1-a8a4-04463c20dc4b","c248bc92-b7a1-4f5b-a0a9-f1d5186a8dae","9900ca48-1c4f-44e3-9dae-ab5bd1633d6c","f9e566d7-45f7-4335-afe7-506247cd0b8e","a0b1590c-24bd-41dd-a6e0-b3cdac7bb4e6","8c6e229b-cbd3-4dc6-9b49-34f701a8aead","1467d162-f107-4606-b5dc-ec538ede0fdd","09bb7c8f-a916-4a39-bd01-2786a14bacc4","9e017f37-5917-4cda-afb8-92072abdbdba","8aafeb2c-85b4-4c4e-af36-3b9efacb167c","6d0e0705-57f3-4223-8745-a27295245029","dec89a30-7004-499f-a99e-05b2842cad2b","7efc83d4-2645-4578-b588-a9cffb15524a","1769e8de-bebe-4687-a28a-34c15859ed98","203f2c30-a3cd-4f70-95b3-07df9f996428","2a0b435c-6f77-4db8-be6b-831d177bd762","eac01009-c323-46fd-8339-09c282e6597e","c4b37f96-4ab0-4a0b-a16e-55bac3e32990","4ad5c69e-0dab-4d66-b548-360da7d53568","72d89744-ac04-4dd4-be8b-9d629acd7c11","32dc3358-e954-4934-9e71-cf1dfbca5b91","961e45bd-8bed-4ebc-b3d8-1f0e63736d04"],"query2":{"sort":[{"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee","direction":"descending"},{"property":"NX\\Q","direction":"descending"}],"aggregations":[{"property":"title","aggregator":"count"}]},"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"55d7f55d-3bd1-4a1a-97c9-a6c8354ecd3d":{"value":{"id":"55d7f55d-3bd1-4a1a-97c9-a6c8354ecd3d","version":1,"type":"table","name":"Config","format":{"gallery_cover":{"type":"page_content"},"list_properties":[{"visible":true,"property":"NX\\Q"},{"visible":true,"property":"d]hq"},{"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"visible":true,"property":"sD^m"},{"visible":true,"property":"`gQ~"},{"visible":false,"property":"wz|S"},{"visible":false,"property":"bB{M"},{"visible":false,"property":"Dj]h"},{"visible":false,"property":"@NcA"}],"property_filters":[{"id":"b54a6c88-635d-4de4-946e-5a855a1f4069","filter":{"filter":{"value":[{"type":"exact","value":"Notice"},{"type":"exact","value":"Menu"},{"type":"exact","value":"Config"},{"type":"exact","value":"SubMenu"},{"type":"exact","value":"Page"}],"operator":"enum_is"},"property":"`gQ~"}}],"table_properties":[{"width":116,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"width":118,"visible":true,"property":"`gQ~"},{"width":219,"visible":true,"property":"title"},{"width":326,"visible":true,"property":"d]hq"},{"width":352,"visible":true,"property":"wz|S"},{"width":111,"visible":true,"property":"NX\\Q"},{"width":116,"visible":true,"property":"bB{M"},{"width":142,"visible":true,"property":"sD^m"},{"width":100,"visible":true,"property":"@NcA"},{"width":117,"visible":true,"property":"Dj]h"}],"gallery_properties":[{"visible":true,"property":"title"},{"visible":true,"property":"d]hq"},{"visible":true,"property":"`gQ~"},{"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"visible":false,"property":"bB{M"},{"visible":false,"property":"NX\\Q"},{"visible":false,"property":"Dj]h"},{"visible":false,"property":"@NcA"},{"visible":false,"property":"wz|S"},{"visible":false,"property":"sD^m"}],"table_frozen_column_index":-1,"table_subitem_toggle_column":"title"},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"8dfd415c-71af-41f9-b984-e7182bf2210b":{"value":{"id":"8dfd415c-71af-41f9-b984-e7182bf2210b","version":1,"type":"board","name":"Post Board","format":{"board_columns":[{"value":{"type":"select","value":"Draft"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"value":{"type":"select","value":"Invisible"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"value":{"type":"select","value":"Published"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"value":{"type":"select"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"}],"board_columns_by":{"sort":{"type":"manual"},"type":"select","property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},"board_properties":[{"visible":true,"property":"title"},{"visible":true,"property":"bB{M"},{"visible":true,"property":"sD^m"},{"visible":true,"property":"wz|S"},{"visible":false,"property":"NX\\Q"},{"visible":false,"property":"Dj]h"},{"visible":false,"property":"@NcA"},{"visible":false,"property":"d]hq"},{"visible":false,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"visible":false,"property":"`gQ~"}],"table_properties":[{"width":100,"visible":true,"property":"`gQ~"},{"width":116,"visible":true,"property":"bB{M"},{"width":142,"visible":true,"property":"sD^m"},{"width":219,"visible":true,"property":"title"},{"width":100,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"width":155,"visible":true,"property":"d]hq"},{"width":352,"visible":true,"property":"wz|S"},{"width":111,"visible":true,"property":"NX\\Q"},{"width":100,"visible":true,"property":"@NcA"},{"width":117,"visible":true,"property":"Dj]h"}],"table_subitem_toggle_column":"title"},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"},"3c2f93d8-6810-42a1-87da-55f1ecda9bca":{"value":{"id":"3c2f93d8-6810-42a1-87da-55f1ecda9bca","version":74,"type":"chart","name":"Tag","format":{"chart_config":{"type":"column","dataConfig":{"type":"groups_reducer","groupBy":{"sort":{"type":"manual"},"type":"multi_select","property":"sD^m","hideEmptyGroups":false},"aggregationConfig":{"aggregation":{"aggregator":"count"},"seriesFormat":{"displayType":"column"}}},"chartFormat":{"mainSort":"manual","hideLegend":false,"axisCumulative":false,"axisGroupStyle":"normal","donutHideValue":false,"donutDataLabels":"value","axisShowDataLabels":true,"axisHideEmptyGroups":false}},"property_filters":[{"id":"01739a9c-9312-4d0d-bf7d-de1204300bdb","filter":{"filter":{"value":{"type":"exact","value":"Post"},"operator":"enum_is"},"property":"`gQ~"}},{"id":"3e615570-2c44-41d9-ae7c-603eabc9056e","filter":{"filter":{"value":{"type":"exact","value":"Published"},"operator":"enum_is"},"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"}}],"table_properties":[{"width":100,"visible":true,"property":"`gQ~"},{"width":247,"visible":true,"property":"title"},{"width":233,"visible":true,"property":"wz|S"},{"width":100,"visible":true,"property":"f211bdc0-ee00-4186-9a7d-f68c055ec2ee"},{"width":219,"visible":true,"property":"sD^m"},{"width":184,"visible":true,"property":"d]hq"},{"width":111,"visible":true,"property":"NX\\Q"},{"width":100,"visible":false,"property":"bB{M"},{"width":117,"visible":false,"property":"Dj]h"},{"width":100,"visible":false,"property":"@NcA"}],"subitem_display_mode":"flattened","table_subitem_toggle_column":"title"},"parent_id":"0dc306ca-50a6-4917-9b5a-85a61f0f66f5","parent_table":"block","alive":true,"space_id":"4cc04375-345a-4a1e-bdf0-3a7c88ef0425"},"role":"reader"}},"notion_user":{},"collection_query":{},"signed_urls":{"14688756-3979-801b-8e1e-cf72d1848856":"https://file.notion.so/f/f/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/3a9e11cf-1dd2-4987-b330-8e9d67ea3555/Untitled.png?table=block&id=14688756-3979-801b-8e1e-cf72d1848856&spaceId=4cc04375-345a-4a1e-bdf0-3a7c88ef0425&expirationTimestamp=1734890400000&signature=WjLFedO7MR0-XNcW4EZgiN2iJnQeRjkjJ6eNAlAVyTg","14688756-3979-800d-8df6-f3fb9ba47926":"https://file.notion.so/f/f/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/0f71dddd-810b-4881-81bf-75296977bd15/Untitled.png?table=block&id=14688756-3979-800d-8df6-f3fb9ba47926&spaceId=4cc04375-345a-4a1e-bdf0-3a7c88ef0425&expirationTimestamp=1734890400000&signature=GubRsY4AwanXXa7FDXK-tuPxBKPRDQZsw9fsAVZ4hO4","14688756-3979-809a-af5f-ee8cc4612737":"https://file.notion.so/f/f/4cc04375-345a-4a1e-bdf0-3a7c88ef0425/f34759e5-39ea-43d1-a126-b96a589bb37b/Untitled.png?table=block&id=14688756-3979-809a-af5f-ee8cc4612737&spaceId=4cc04375-345a-4a1e-bdf0-3a7c88ef0425&expirationTimestamp=1734890400000&signature=mh46XYTE3KU_wsqxGFnNQ7ZoOqAFnoCDJJsRDy5ktjk"}}},"prev":{"id":"14688756-3979-80f8-8f88-d0bb8697b4a4","date":{"start_date":"2024-12-21","date_format":"relative"},"type":"Post","slug":"post/deterministic-simulator","tags":["分布式系统"],"summary":"最初接触到确定性模拟的概念是在 2022 年 Rust China Conf 上听的一场演讲，后续一直持续关注着这个领域，也在腾讯组内分享过相关议题","title":"确定性模拟器","status":"Published","category":"","comment":"","publishDate":1734739200000,"publishDay":"2024-12-21","lastEditedDate":"2024-12-21T17:14:04.798Z","lastEditedDay":"2024-12-21","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"分布式系统","color":"gray"}],"href":"/post/deterministic-simulator","target":"_self","password":""},"next":{"id":"12988756-3979-8065-aeb4-e6ec1258ed90","date":{"start_date":"2024-11-17","date_format":"relative"},"type":"Post","slug":"post/memorydb","tags":["分布式系统","数据库","论文阅读"],"summary":"MemoryDB 是 Amazon 的一个 Redis 兼容的 KV 数据库，论文发表在 SIGMOD 2024 上","title":"MemoryDB: Redis + Remote Log","status":"Published","category":"","comment":"","publishDate":1731801600000,"publishDay":"2024-11-17","lastEditedDate":"2024-11-18T03:17:24.166Z","lastEditedDay":"2024-11-18","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"分布式系统","color":"gray"},{"name":"数据库","color":"yellow"},{"name":"论文阅读","color":"orange"}],"href":"/post/memorydb","target":"_self","password":""},"recommendPosts":[{"id":"0e96a78e-dec9-4620-b0e8-a2b889017cb7","date":{"start_date":"2024-01-04","date_format":"relative"},"type":"Post","slug":"post/kernel-rwlock","tags":["Linux","操作系统"],"summary":"前段时间看了《Linux内核设计与实现》，第 10 章「内核同步方法」中提到了几种内核中的读写锁。它们分别代表了几种比较典型的读写锁设计，非常值得学习，这里记录一下，讨论是基于 2.6 内核和 x86 体系结构的基础上进行的","title":"从 Linux 内核看读写锁设计","status":"Published","category":"","comment":"","publishDate":1704326400000,"publishDay":"2024-1-4","lastEditedDate":"2024-11-22T13:43:47.074Z","lastEditedDay":"2024-11-22","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"Linux","color":"purple"},{"name":"操作系统","color":"blue"}],"href":"/post/kernel-rwlock","target":"_self","password":""},{"id":"3327d648-8e54-4edf-a38e-a9cba8884a1a","date":{"start_date":"2023-08-16","date_format":"relative"},"type":"Post","slug":"post/softirq-and-software-interrupt","tags":["Linux","操作系统"],"summary":"软中断（softirq）和软件中断（software interrupt）","title":"混乱的软中断概念","status":"Published","category":"","comment":"","publishDate":1692144000000,"publishDay":"2023-8-16","lastEditedDate":"2024-11-22T13:43:43.070Z","lastEditedDay":"2024-11-22","fullWidth":false,"pageIcon":"","pageCover":"","pageCoverThumbnail":"","ext":{},"tagItems":[{"name":"Linux","color":"purple"},{"name":"操作系统","color":"blue"}],"href":"/post/softirq-and-software-interrupt","target":"_self","password":""}]},"__N_SSG":true}